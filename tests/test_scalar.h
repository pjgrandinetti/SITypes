#ifndef TEST_SCALAR_H
#define TEST_SCALAR_H

// Prototypes for all tests (skip SIScalarCreateWithOCString)
bool test_SIScalarGetTypeID(void);
bool test_SIScalarCreateCopy(void);
bool test_SIScalarCreateMutableCopy(void);
bool test_SIScalarCreateWithFloat(void);
bool test_SIScalarCreateMutableWithFloat(void);
bool test_SIScalarCreateWithDouble(void);
bool test_SIScalarCreateMutableWithDouble(void);
bool test_SIScalarCreateWithFloatComplex(void);
bool test_SIScalarCreateMutableWithFloatComplex(void);
bool test_SIScalarCreateWithDoubleComplex(void);
bool test_SIScalarCreateMutableWithDoubleComplex(void);
bool test_SIScalarCreateWithStringContainingSingleUnitFromLibrary(void);
bool test_SIScalarGetValue(void);
bool test_SIScalarSetFloatValue(void);
bool test_SIScalarSetDoubleValue(void);
bool test_SIScalarSetFloatComplexValue(void);
bool test_SIScalarSetDoubleComplexValue(void);
bool test_SIScalarSetElementType(void);
bool test_SIScalarFloatValue(void);
bool test_SIScalarDoubleValue(void);
bool test_SIScalarFloatComplexValue(void);
bool test_SIScalarDoubleComplexValue(void);
bool test_SIScalarMagnitudeValue(void);
bool test_SIScalarArgumentValue(void);
bool test_SIScalarFloatValueInUnit(void);
bool test_SIScalarDoubleValueInUnit(void);
bool test_SIScalarFloatComplexValueInUnit(void);
bool test_SIScalarDoubleComplexValueInUnit(void);
bool test_SIScalarFloatValueInCoherentUnit(void);
bool test_SIScalarDoubleValueInCoherentUnit(void);
bool test_SIScalarFloatComplexValueInCoherentUnit(void);
bool test_SIScalarDoubleComplexValueInCoherentUnit(void);
bool test_SIScalarCreateByConvertingToNumberType(void);
bool test_SIScalarTakeComplexPart(void);
bool test_SIScalarCreateByTakingComplexPart(void);
bool test_SIScalarCreateByReducingUnit(void);
bool test_SIScalarReduceUnit(void);
bool test_SIScalarConvertToUnit(void);
bool test_SIScalarCreateByConvertingToUnit(void);
bool test_SIScalarConvertToCoherentUnit(void);
bool test_SIScalarCreateByConvertingToCoherentUnit(void);
bool test_SIScalarCreateByAdding(void);
bool test_SIScalarAdd(void);
bool test_SIScalarCreateBySubtracting(void);
bool test_SIScalarSubtract(void);
bool test_SIScalarCreateByMultiplyingWithoutReducingUnit(void);
bool test_SIScalarMultiplyWithoutReducingUnit(void);
bool test_SIScalarCreateByMultiplying(void);
bool test_SIScalarMultiply(void);
bool test_SIScalarCreateByDividingWithoutReducingUnit(void);
bool test_SIScalarDivideWithoutReducingUnit(void);
bool test_SIScalarCreateByDividing(void);
bool test_SIScalarDivide(void);
bool test_SIScalarCreateByRaisingToAPowerWithoutReducingUnit(void);
bool test_SIScalarRaiseToAPowerWithoutReducingUnit(void);
bool test_SIScalarCreateByRaisingToAPower(void);
bool test_SIScalarRaiseToAPower(void);
bool test_SIScalarCreateByTakingAbsoluteValue(void);
bool test_SIScalarTakeAbsoluteValue(void);
bool test_SIScalarCreateByGammaFunctionWithoutReducingUnit(void);
bool test_SIScalarCreateByTakingNthRoot(void);
bool test_SIScalarTakeNthRoot(void);
bool test_SIScalarTakeLog10(void);
bool test_SIScalarCreateByZeroingPart(void);
bool test_SIScalarZeroPart(void);
bool test_SIScalarMultiplyByDimensionlessRealConstant(void);
bool test_SIScalarCreateByMultiplyingByDimensionlessRealConstant(void);
bool test_SIScalarCreateByMultiplyingByDimensionlessComplexConstant(void);
bool test_SIScalarMultiplyByDimensionlessComplexConstant(void);
bool test_SIScalarCreateByConjugation(void);
bool test_SIScalarConjugate(void);
bool test_SIScalarShow(void);
bool test_SIScalarCreateStringValue(void);
bool test_SIScalarCreateNumericStringValue(void);
bool test_SIScalarCreateStringValueForPart(void);
bool test_SIScalarCreateUnitString(void);
bool test_SIScalarCreateStringValueWithFormat(void);
bool test_SIScalarCreateNumericStringValueWithFormat(void);
bool test_SIScalarAddToArrayAsStringValue(void);
bool test_SIScalarIsReal(void);
bool test_SIScalarIsImaginary(void);
bool test_SIScalarIsComplex(void);
bool test_SIScalarIsZero(void);
bool test_SIScalarIsInfinite(void);
bool test_SIScalarIsRealNonNegativeInteger(void);
bool test_SIScalarValidateProposedStringValue(void);
bool test_SIScalarEqual(void);
bool test_SIScalarCompare(void);
bool test_SIScalarCompareReduced(void);
bool test_SIScalarCompareLoose(void);

#endif /* TEST_SCALAR_H */
