<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_s_i_scalar_8h" kind="file" language="C++">
    <compoundname>SIScalar.h</compoundname>
    <includes refid="_s_i_library_8h" local="yes">SILibrary.h</includes>
    <includedby refid="_s_i_library_8h" local="yes">SILibrary.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>SIDimensionality.h</label>
        <link refid="_s_i_dimensionality_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>SIDimensionalityParser.h</label>
        <link refid="_s_i_dimensionality_parser_8h_source"/>
      </node>
      <node id="2">
        <label>SILibrary.h</label>
        <link refid="_s_i_library_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>SIQuantity.h</label>
        <link refid="_s_i_quantity_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>SIScalar.h</label>
        <link refid="_s_i_scalar_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>SIScalarConstants.h</label>
        <link refid="_s_i_scalar_constants_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SIUnit.h</label>
        <link refid="_s_i_unit_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>SIUnitParser.h</label>
        <link refid="_s_i_unit_parser_8h_source"/>
      </node>
      <node id="4">
        <label>OCTypes/OCLibrary.h</label>
      </node>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>SIDimensionality.c</label>
        <link refid="_s_i_dimensionality_8c_source"/>
      </node>
      <node id="4">
        <label>SIDimensionalityScanner.c</label>
        <link refid="_s_i_dimensionality_scanner_8c_source"/>
      </node>
      <node id="5">
        <label>SIDimensionalityScanner.l</label>
        <link refid="_s_i_dimensionality_scanner_8l_source"/>
      </node>
      <node id="6">
        <label>SIFormulaMassParser.c</label>
        <link refid="_s_i_formula_mass_parser_8c_source"/>
      </node>
      <node id="2">
        <label>SILibrary.h</label>
        <link refid="_s_i_library_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>SIQuantity.c</label>
        <link refid="_s_i_quantity_8c_source"/>
      </node>
      <node id="8">
        <label>SIQuantity.h</label>
        <link refid="_s_i_quantity_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SIScalar.c</label>
        <link refid="_s_i_scalar_8c_source"/>
      </node>
      <node id="1">
        <label>SIScalar.h</label>
        <link refid="_s_i_scalar_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>SIScalarConstants.c</label>
        <link refid="_s_i_scalar_constants_8c_source"/>
      </node>
      <node id="11">
        <label>SIScalarParser.c</label>
        <link refid="_s_i_scalar_parser_8c_source"/>
      </node>
      <node id="12">
        <label>SIScalarScanner.c</label>
        <link refid="_s_i_scalar_scanner_8c_source"/>
      </node>
      <node id="13">
        <label>SIScalarScanner.l</label>
        <link refid="_s_i_scalar_scanner_8l_source"/>
      </node>
      <node id="14">
        <label>SIUnit.c</label>
        <link refid="_s_i_unit_8c_source"/>
      </node>
      <node id="15">
        <label>SIUnit.h</label>
        <link refid="_s_i_unit_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>SIUnitScanner.c</label>
        <link refid="_s_i_unit_scanner_8c_source"/>
      </node>
      <node id="17">
        <label>SIUnitScanner.l</label>
        <link refid="_s_i_unit_scanner_8l_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="union_____s_i_number" prot="public">__SINumber</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_s_i_scalar_8h_1abfa6458317d41ba318d2ef65cb6e636e" prot="public" static="no">
        <type>union __SINumber</type>
        <definition>typedef union __SINumber __SINumber</definition>
        <argsstring></argsstring>
        <name>__SINumber</name>
        <briefdescription>
<para>SIScalar represents a scalar physical quantity. It is a concrete subtype of SIQuantity. It has three essential attributes: a unit, an elementType, and a numerical value. SIScalar supports four elementTypes: float, double, float complex, and double complex. </para>
        </briefdescription>
        <detaileddescription>
<para>For additional details visit <ulink url="http://www.PhySy.org">http://www.PhySy.org</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="42" column="12"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" prot="public" static="no">
        <type>const struct <ref refid="struct_____s_i_scalar" kindref="compound">__SIScalar</ref> *</type>
        <definition>typedef const struct __SIScalar* SIScalarRef</definition>
        <argsstring></argsstring>
        <name>SIScalarRef</name>
        <briefdescription>
<para>This is the type of a reference to immutable SIScalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="48" column="31" bodyfile="SIScalar.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" prot="public" static="no">
        <type>struct <ref refid="struct_____s_i_scalar" kindref="compound">__SIScalar</ref> *</type>
        <definition>typedef struct __SIScalar* SIMutableScalarRef</definition>
        <argsstring></argsstring>
        <name>SIMutableScalarRef</name>
        <briefdescription>
<para>This is the type of a reference to mutable SIScalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="54" column="25" bodyfile="SIScalar.h" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_s_i_scalar_8h_1ae73ca7ef4537227256f6ee2ae9a6aee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OCTypeID</type>
        <definition>OCTypeID SIScalarGetTypeID</definition>
        <argsstring>(void)</argsstring>
        <name>SIScalarGetTypeID</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the type ID for SIScalar. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type ID. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="60" column="10" bodyfile="SIScalar.c" bodystart="88" bodyend="92" declfile="SIScalar.h" declline="60" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1af6ad9941f221e08b720cf78d258469ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateCopy</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarCreateCopy</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Creates a copy of a scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of the scalar. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="68" column="13" bodyfile="SIScalar.c" bodystart="157" bodyend="161" declfile="SIScalar.h" declline="68" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a5a4eae72c05f0cd99d3f28e4a8e362ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
        <definition>SIMutableScalarRef SIScalarCreateMutableCopy</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarCreateMutableCopy</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Creates a mutable copy of a scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A mutable copy of the scalar. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="75" column="20" bodyfile="SIScalar.c" bodystart="163" bodyend="167" declfile="SIScalar.h" declline="75" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ae51f925cba2fa406727411c6f9333c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateWithFloat</definition>
        <argsstring>(float input_value, SIUnitRef unit)</argsstring>
        <name>SIScalarCreateWithFloat</name>
        <param>
          <type>float</type>
          <declname>input_value</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Creates a scalar from float value and unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The float value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="83" column="13" bodyfile="SIScalar.c" bodystart="189" bodyend="192" declfile="SIScalar.h" declline="83" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a45e2f5d6f6dea3e55bf20c5ad61442b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
        <definition>SIMutableScalarRef SIScalarCreateMutableWithFloat</definition>
        <argsstring>(float input_value, SIUnitRef unit)</argsstring>
        <name>SIScalarCreateMutableWithFloat</name>
        <param>
          <type>float</type>
          <declname>input_value</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Creates a mutable scalar from float value and unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The float value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIMutableScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="91" column="20" bodyfile="SIScalar.c" bodystart="194" bodyend="197" declfile="SIScalar.h" declline="91" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a2371d11d3cb75ffaab47817ccda03d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateWithDouble</definition>
        <argsstring>(double input_value, SIUnitRef unit)</argsstring>
        <name>SIScalarCreateWithDouble</name>
        <param>
          <type>double</type>
          <declname>input_value</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Creates a scalar from double value and unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="99" column="13" bodyfile="SIScalar.c" bodystart="199" bodyend="202" declfile="SIScalar.h" declline="99" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a687b82fc021bf7b637cf62affb5931bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
        <definition>SIMutableScalarRef SIScalarCreateMutableWithDouble</definition>
        <argsstring>(double input_value, SIUnitRef unit)</argsstring>
        <name>SIScalarCreateMutableWithDouble</name>
        <param>
          <type>double</type>
          <declname>input_value</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Creates a mutable scalar from double value and unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIMutableScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="107" column="20" bodyfile="SIScalar.c" bodystart="204" bodyend="207" declfile="SIScalar.h" declline="107" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aed59f1dfb9a2fa1c5df27082f816595a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateWithFloatComplex</definition>
        <argsstring>(float _Complex input_value, SIUnitRef unit)</argsstring>
        <name>SIScalarCreateWithFloatComplex</name>
        <param>
          <type>float _Complex</type>
          <declname>input_value</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Creates a scalar from float complex value and unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The float complex value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="115" column="13" bodyfile="SIScalar.c" bodystart="209" bodyend="212" declfile="SIScalar.h" declline="115" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1af8f30169fd64ac27af25a9f77a396ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
        <definition>SIMutableScalarRef SIScalarCreateMutableWithFloatComplex</definition>
        <argsstring>(float _Complex input_value, SIUnitRef unit)</argsstring>
        <name>SIScalarCreateMutableWithFloatComplex</name>
        <param>
          <type>float _Complex</type>
          <declname>input_value</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Creates a mutable scalar from float complex value and unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The float complex value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIMutableScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="123" column="20" bodyfile="SIScalar.c" bodystart="214" bodyend="217" declfile="SIScalar.h" declline="123" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a2f2aebbf0c3110cdec18654e6cb174fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateWithDoubleComplex</definition>
        <argsstring>(double _Complex input_value, SIUnitRef unit)</argsstring>
        <name>SIScalarCreateWithDoubleComplex</name>
        <param>
          <type>double _Complex</type>
          <declname>input_value</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Creates a scalar from double complex value and unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double complex value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="131" column="13" bodyfile="SIScalar.c" bodystart="219" bodyend="222" declfile="SIScalar.h" declline="131" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a824aa42d425169ea96d4197f87dca776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
        <definition>SIMutableScalarRef SIScalarCreateMutableWithDoubleComplex</definition>
        <argsstring>(double _Complex input_value, SIUnitRef unit)</argsstring>
        <name>SIScalarCreateMutableWithDoubleComplex</name>
        <param>
          <type>double _Complex</type>
          <declname>input_value</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Creates a mutable scalar from double complex value and unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double complex value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIMutableScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="139" column="20" bodyfile="SIScalar.c" bodystart="224" bodyend="227" declfile="SIScalar.h" declline="139" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aa2e50aa931bd4fbf0082e61179077e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateWithStringContainingSingleUnitFromLibrary</definition>
        <argsstring>(OCStringRef theString)</argsstring>
        <name>SIScalarCreateWithStringContainingSingleUnitFromLibrary</name>
        <param>
          <type>OCStringRef</type>
          <declname>theString</declname>
        </param>
        <briefdescription>
<para>Creates a new SIScalar object from a string containing a single unit name from the unit library. </para>
        </briefdescription>
        <detaileddescription>
<para>This function parses the provided OCStringRef, which should contain a single valid unit name (e.g., &quot;m&quot;, &quot;kg&quot;, &quot;s&quot;). It returns a new immutable <ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref> representing the parsed unit with a value of 1.0, or NULL if the string is invalid or the unit is not found.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theString</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCStringRef containing the name or symbol of a single unit to look up in the unit library. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref> representing the unit with value 1.0, or NULL if the string is invalid or the unit is not found.</para>
</simplesect>
<simplesect kind="note"><para>The caller is responsible for releasing the returned <ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref>. </para>
</simplesect>
<simplesect kind="note"><para>This function does not support parsing compound units or expressions; only single unit names are accepted. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="153" column="13" bodyfile="SIScalar.c" bodystart="1964" bodyend="2229" declfile="SIScalar.h" declline="153" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1acb83c99dcbadf14906601e2ac6d16ab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="union_____s_i_number" kindref="compound">__SINumber</ref></type>
        <definition>__SINumber SIScalarGetValue</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarGetValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Gets the value of a scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the scalar. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="161" column="12" bodyfile="SIScalar.c" bodystart="316" bodyend="319" declfile="SIScalar.h" declline="161" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aee93f8a43574ca584073e24185b4ef3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIScalarSetFloatValue</definition>
        <argsstring>(SIMutableScalarRef theScalar, float value)</argsstring>
        <name>SIScalarSetFloatValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the float value of a mutable scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The mutable scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The float value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="168" column="6" bodyfile="SIScalar.c" bodystart="321" bodyend="325" declfile="SIScalar.h" declline="168" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a2c82abbde15f38a49f84d72bb0105d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIScalarSetDoubleValue</definition>
        <argsstring>(SIMutableScalarRef theScalar, double value)</argsstring>
        <name>SIScalarSetDoubleValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the double value of a mutable scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The mutable scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="175" column="6" bodyfile="SIScalar.c" bodystart="327" bodyend="331" declfile="SIScalar.h" declline="175" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a37709d874b4f8935a428d13e8c772a91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIScalarSetFloatComplexValue</definition>
        <argsstring>(SIMutableScalarRef theScalar, float _Complex value)</argsstring>
        <name>SIScalarSetFloatComplexValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>float _Complex</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the float complex value of a mutable scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The mutable scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The float complex value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="182" column="6" bodyfile="SIScalar.c" bodystart="333" bodyend="337" declfile="SIScalar.h" declline="182" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a697d8dc166fd17e955ec42ea2f18332d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIScalarSetDoubleComplexValue</definition>
        <argsstring>(SIMutableScalarRef theScalar, double _Complex value)</argsstring>
        <name>SIScalarSetDoubleComplexValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>double _Complex</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the double complex value of a mutable scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The mutable scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double complex value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="189" column="6" bodyfile="SIScalar.c" bodystart="339" bodyend="343" declfile="SIScalar.h" declline="189" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a1f82a304e43c692d7cd6e838d58ca065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIScalarSetElementType</definition>
        <argsstring>(SIMutableScalarRef theScalar, numberType elementType)</argsstring>
        <name>SIScalarSetElementType</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>numberType</type>
          <declname>elementType</declname>
        </param>
        <briefdescription>
<para>Sets the element type of a mutable scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The mutable scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementType</parametername>
</parameternamelist>
<parameterdescription>
<para>The element type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="196" column="6" bodyfile="SIScalar.c" bodystart="231" bodyend="314" declfile="SIScalar.h" declline="196" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1afd86f58aa4ac3338cebf0b5381fb8e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float SIScalarFloatValue</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarFloatValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Returns a float value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A float value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="203" column="7" bodyfile="SIScalar.c" bodystart="346" bodyend="360" declfile="SIScalar.h" declline="203" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aef133da263cd2e705deb20078f7db309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SIScalarDoubleValue</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarDoubleValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Returns a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="210" column="8" bodyfile="SIScalar.c" bodystart="362" bodyend="376" declfile="SIScalar.h" declline="210" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1adac3474927153359307977461f1968c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float _Complex</type>
        <definition>float _Complex SIScalarFloatComplexValue</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarFloatComplexValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Returns a float complex value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A float complex value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="217" column="16" bodyfile="SIScalar.c" bodystart="378" bodyend="392" declfile="SIScalar.h" declline="217" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a4a72448bde735398fe52b1b41bfe9357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double _Complex</type>
        <definition>double _Complex SIScalarDoubleComplexValue</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarDoubleComplexValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Returns a double complex value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double complex value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="224" column="17" bodyfile="SIScalar.c" bodystart="394" bodyend="408" declfile="SIScalar.h" declline="224" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ae18f03fc24864a424e5b85b63b37400b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SIScalarMagnitudeValue</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarMagnitudeValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Calculates and returns magnitude. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="231" column="8" bodyfile="SIScalar.c" bodystart="410" bodyend="415" declfile="SIScalar.h" declline="231" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a8beeac762a9466e5c81959feed0b51c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SIScalarArgumentValue</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarArgumentValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Returns the argument value of scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The argument. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="238" column="8" bodyfile="SIScalar.c" bodystart="417" bodyend="422" declfile="SIScalar.h" declline="238" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a09dfb1b3a8c488c64e38f7d04b83c138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float SIScalarFloatValueInUnit</definition>
        <argsstring>(SIScalarRef theScalar, SIUnitRef unit, bool *success)</argsstring>
        <name>SIScalarFloatValueInUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>success</declname>
        </param>
        <briefdescription>
<para>Calculates and returns float value after converting to unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>success</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to boolean that returns true if operation was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A float value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="247" column="7" bodyfile="SIScalar.c" bodystart="512" bodyend="534" declfile="SIScalar.h" declline="247" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a15e42e708d9530fe3691ab8bb4f807b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SIScalarDoubleValueInUnit</definition>
        <argsstring>(SIScalarRef theScalar, SIUnitRef unit, bool *success)</argsstring>
        <name>SIScalarDoubleValueInUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>success</declname>
        </param>
        <briefdescription>
<para>Calculates and returns double value after converting to unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>success</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to boolean that returns true if operation was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="256" column="8" bodyfile="SIScalar.c" bodystart="536" bodyend="558" declfile="SIScalar.h" declline="256" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a08973dd70fd31016cd096132e40607f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float _Complex</type>
        <definition>float _Complex SIScalarFloatComplexValueInUnit</definition>
        <argsstring>(SIScalarRef theScalar, SIUnitRef unit, bool *success)</argsstring>
        <name>SIScalarFloatComplexValueInUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>success</declname>
        </param>
        <briefdescription>
<para>Calculates and returns float complex value after converting to unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>success</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to boolean that returns true if operation was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A float complex value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="265" column="16" bodyfile="SIScalar.c" bodystart="560" bodyend="582" declfile="SIScalar.h" declline="265" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a25ee1924e146f0d2e149c62876d68984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double _Complex</type>
        <definition>double _Complex SIScalarDoubleComplexValueInUnit</definition>
        <argsstring>(SIScalarRef theScalar, SIUnitRef unit, bool *success)</argsstring>
        <name>SIScalarDoubleComplexValueInUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>success</declname>
        </param>
        <briefdescription>
<para>Calculates and returns double complex value after converting to unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>success</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to boolean that returns true if operation was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double complex value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="274" column="17" bodyfile="SIScalar.c" bodystart="584" bodyend="609" declfile="SIScalar.h" declline="274" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a26066eae739cb00d411f8db68ea24009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float SIScalarFloatValueInCoherentUnit</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarFloatValueInCoherentUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Calculates and returns float value after converting to its coherent SI unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A float value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="281" column="7" bodyfile="SIScalar.c" bodystart="424" bodyend="444" declfile="SIScalar.h" declline="281" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a96a0168dab04f04cde0369eee709d2c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SIScalarDoubleValueInCoherentUnit</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarDoubleValueInCoherentUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Calculates and returns double value after converting to its coherent SI unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="288" column="8" bodyfile="SIScalar.c" bodystart="446" bodyend="466" declfile="SIScalar.h" declline="288" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aef06532677e4ef24bec545f21ae69e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float _Complex</type>
        <definition>float _Complex SIScalarFloatComplexValueInCoherentUnit</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarFloatComplexValueInCoherentUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Calculates and returns float complex value after converting to its coherent SI unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A float complex value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="295" column="16" bodyfile="SIScalar.c" bodystart="468" bodyend="488" declfile="SIScalar.h" declline="295" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aa956a5675cc052badc3d98d31ef652df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double _Complex</type>
        <definition>double _Complex SIScalarDoubleComplexValueInCoherentUnit</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarDoubleComplexValueInCoherentUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Calculates and returns double complex value after converting to its coherent SI unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double complex value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="302" column="17" bodyfile="SIScalar.c" bodystart="490" bodyend="510" declfile="SIScalar.h" declline="302" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ab52ef39219c2374d068d1ff6126b0c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByConvertingToNumberType</definition>
        <argsstring>(SIScalarRef theScalar, numberType elementType)</argsstring>
        <name>SIScalarCreateByConvertingToNumberType</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>numberType</type>
          <declname>elementType</declname>
        </param>
        <briefdescription>
<para>Creates a copy of a scalar as elementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementType</parametername>
</parameternamelist>
<parameterdescription>
<para>The element type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of the scalar.</para>
</simplesect>
Note that down conversion from double to float loses precision and down conversion from complex to real loses the imaginary part of the quantity. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="314" column="13" bodyfile="SIScalar.c" bodystart="613" bodyend="619" declfile="SIScalar.h" declline="314" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a72be073d1d7d847db53326244e4c7db7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarTakeComplexPart</definition>
        <argsstring>(SIMutableScalarRef theScalar, complexPart part)</argsstring>
        <name>SIScalarTakeComplexPart</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_quantity_8h_1a5983127ddf9bb6c2e0569779bb8f5528" kindref="member">complexPart</ref></type>
          <declname>part</declname>
        </param>
        <briefdescription>
<para>Takes the complex number part of a scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>The complex number part. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful, false otherwise.</para>
</simplesect>
Complex number parts are kSIRealPart, kSIImaginaryPart, kSIMagnitudePart, and kSIArgumentPart. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="323" column="6" bodyfile="SIScalar.c" bodystart="621" bodyend="699" declfile="SIScalar.h" declline="323" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aa84b2b2d1077869403ad6206c7542c77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByTakingComplexPart</definition>
        <argsstring>(SIScalarRef theScalar, complexPart part)</argsstring>
        <name>SIScalarCreateByTakingComplexPart</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_quantity_8h_1a5983127ddf9bb6c2e0569779bb8f5528" kindref="member">complexPart</ref></type>
          <declname>part</declname>
        </param>
        <briefdescription>
<para>Creates a scalar from complex number part. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>The complex number part. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object.</para>
</simplesect>
Complex number parts are kSIRealPart, kSIImaginaryPart, kSIMagnitudePart, and kSIArgumentPart. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="332" column="13" bodyfile="SIScalar.c" bodystart="701" bodyend="708" declfile="SIScalar.h" declline="332" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a5d54f1cba04975059e42d78c6fb4b10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateWithOCString</definition>
        <argsstring>(OCStringRef string, OCStringRef *error)</argsstring>
        <name>SIScalarCreateWithOCString</name>
        <param>
          <type>OCStringRef</type>
          <declname>string</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by parsing string of number with unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if string cannot be parsed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="340" column="13" declfile="SIScalar.h" declline="340" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1abac2ae228535f3d26163282e0b65ba81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByReducingUnit</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarCreateByReducingUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by reducing its unit to the numerator and denominator exponents to their lowest integer values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The input scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="347" column="13" bodyfile="SIScalar.c" bodystart="750" bodyend="757" declfile="SIScalar.h" declline="347" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a3677eb2468ac84a15844cd25151399c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarReduceUnit</definition>
        <argsstring>(SIMutableScalarRef theScalar)</argsstring>
        <name>SIScalarReduceUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Reduces the unit&apos;s numerator and denominator exponents to their lowest integer values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The input scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="354" column="6" bodyfile="SIScalar.c" bodystart="710" bodyend="748" declfile="SIScalar.h" declline="354" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a5b786161f6d7945b49265a2044cf4687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarConvertToUnit</definition>
        <argsstring>(SIMutableScalarRef theScalar, SIUnitRef unit, OCStringRef *error)</argsstring>
        <name>SIScalarConvertToUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Converts a scalar to another unit of the same dimensionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The input scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The new unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="363" column="6" bodyfile="SIScalar.c" bodystart="759" bodyend="799" declfile="SIScalar.h" declline="363" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1accae31270079adac1d12c1f1176cac74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByConvertingToUnit</definition>
        <argsstring>(SIScalarRef theScalar, SIUnitRef unit, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByConvertingToUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by converting to another unit of the same dimensionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The input scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The new unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if conversion cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="372" column="13" bodyfile="SIScalar.c" bodystart="801" bodyend="809" declfile="SIScalar.h" declline="372" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a48d501564d32aa25564096a01d71442f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarConvertToCoherentUnit</definition>
        <argsstring>(SIMutableScalarRef theScalar, OCStringRef *error)</argsstring>
        <name>SIScalarConvertToCoherentUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Converts a scalar to a coherent SI unit of the same dimensionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The input scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="380" column="6" bodyfile="SIScalar.c" bodystart="811" bodyend="817" declfile="SIScalar.h" declline="380" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ae1afd60d765f3527f3e23ce056090855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByConvertingToCoherentUnit</definition>
        <argsstring>(SIScalarRef theScalar, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByConvertingToCoherentUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by converting to a coherent SI unit of the same dimensionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The input scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if conversion cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="388" column="13" bodyfile="SIScalar.c" bodystart="819" bodyend="827" declfile="SIScalar.h" declline="388" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a60819e4dc3b1446d560a67e44102b261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByAdding</definition>
        <argsstring>(SIScalarRef input1, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByAdding</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input1</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by adding two scalars of the same dimensionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if operation cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="397" column="13" bodyfile="SIScalar.c" bodystart="975" bodyend="984" declfile="SIScalar.h" declline="397" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aba05d6673cc9e3297badeecfcff311ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarAdd</definition>
        <argsstring>(SIMutableScalarRef target, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarAdd</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Adds a scalar of the same dimensionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The mutable scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="406" column="6" bodyfile="SIScalar.c" bodystart="868" bodyend="973" declfile="SIScalar.h" declline="406" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a0fc57dfa64cf9ec1b97e523964d62d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateBySubtracting</definition>
        <argsstring>(SIScalarRef input1, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarCreateBySubtracting</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input1</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by subtracting two scalars of the same dimensionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input1</parametername>
</parameternamelist>
<parameterdescription>
<para>The subtracted scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The subtracting scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if operation cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="415" column="13" bodyfile="SIScalar.c" bodystart="1093" bodyend="1102" declfile="SIScalar.h" declline="415" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1af86021ed84856607473dceabffb5bc49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarSubtract</definition>
        <argsstring>(SIMutableScalarRef target, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarSubtract</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Subtracts a scalar of the same dimensionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The mutable scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar to be subtracted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="424" column="6" bodyfile="SIScalar.c" bodystart="986" bodyend="1091" declfile="SIScalar.h" declline="424" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ac5ebd466101d33c39529032e8166be61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByMultiplyingWithoutReducingUnit</definition>
        <argsstring>(SIScalarRef input1, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByMultiplyingWithoutReducingUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input1</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by multiplying two scalars without reducing unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if operation cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="433" column="13" bodyfile="SIScalar.c" bodystart="1203" bodyend="1211" declfile="SIScalar.h" declline="433" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a351aaadedc33399a02e239abe9090b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarMultiplyWithoutReducingUnit</definition>
        <argsstring>(SIMutableScalarRef target, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarMultiplyWithoutReducingUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Multiplies by a scalar without reducing unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The mutable scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar to be multiplied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="442" column="6" bodyfile="SIScalar.c" bodystart="1104" bodyend="1201" declfile="SIScalar.h" declline="442" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a5383911a73021f9c8c7d6194c102d6d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByMultiplying</definition>
        <argsstring>(SIScalarRef input1, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByMultiplying</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input1</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by multiplying two scalars. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if operation cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="451" column="13" bodyfile="SIScalar.c" bodystart="1312" bodyend="1320" declfile="SIScalar.h" declline="451" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1acf385da2dd8cd404fe0ec612dd1883d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarMultiply</definition>
        <argsstring>(SIMutableScalarRef target, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarMultiply</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Multiplies by a scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The mutable scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar to be multiplied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="460" column="6" bodyfile="SIScalar.c" bodystart="1213" bodyend="1310" declfile="SIScalar.h" declline="460" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a10524a64224b828383921a8242143f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByDividingWithoutReducingUnit</definition>
        <argsstring>(SIScalarRef input1, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByDividingWithoutReducingUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input1</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by dividing two scalars without reducing unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input1</parametername>
</parameternamelist>
<parameterdescription>
<para>The numerator scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The denominator scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if operation cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="469" column="13" bodyfile="SIScalar.c" bodystart="1565" bodyend="1574" declfile="SIScalar.h" declline="469" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a191f41282c2325d4f6fe546fd21c72b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarDivideWithoutReducingUnit</definition>
        <argsstring>(SIMutableScalarRef target, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarDivideWithoutReducingUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Divides by a scalar without reducing unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The mutable scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar to be divided by. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="478" column="6" bodyfile="SIScalar.c" bodystart="1322" bodyend="1439" declfile="SIScalar.h" declline="478" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ab0b7351461dcc0ff7ad993dfdb931f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByDividing</definition>
        <argsstring>(SIScalarRef input1, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByDividing</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input1</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by dividing two scalars. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input1</parametername>
</parameternamelist>
<parameterdescription>
<para>The numerator scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The denominator scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if operation cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="487" column="13" bodyfile="SIScalar.c" bodystart="1576" bodyend="1585" declfile="SIScalar.h" declline="487" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a7e783c56f337e132d2619d3a39d74214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarDivide</definition>
        <argsstring>(SIMutableScalarRef target, SIScalarRef input2, OCStringRef *error)</argsstring>
        <name>SIScalarDivide</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Divides by a scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The mutable scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar to be divided by. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="496" column="6" bodyfile="SIScalar.c" bodystart="1441" bodyend="1563" declfile="SIScalar.h" declline="496" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a325f89b6d438e8ba3c4e94abf9f6026d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByRaisingToAPowerWithoutReducingUnit</definition>
        <argsstring>(SIScalarRef theScalar, double power, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByRaisingToAPowerWithoutReducingUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>double</type>
          <declname>power</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by raising to an integer power without reducing unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>power</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer power. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if operation cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="505" column="13" bodyfile="SIScalar.c" bodystart="1617" bodyend="1626" declfile="SIScalar.h" declline="505" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a0b1bc4c9406666f375e344859e9fb491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarRaiseToAPowerWithoutReducingUnit</definition>
        <argsstring>(SIMutableScalarRef theScalar, double power, OCStringRef *error)</argsstring>
        <name>SIScalarRaiseToAPowerWithoutReducingUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>double</type>
          <declname>power</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Raises a scalar to an integer power without reducing unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>power</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer power. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="514" column="6" bodyfile="SIScalar.c" bodystart="1587" bodyend="1615" declfile="SIScalar.h" declline="514" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a2eec1e13d0a6d0d53760ef6472bd11d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByRaisingToAPower</definition>
        <argsstring>(SIScalarRef theScalar, double power, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByRaisingToAPower</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>double</type>
          <declname>power</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by raising to an integer power. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>power</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer power. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if operation cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="523" column="13" bodyfile="SIScalar.c" bodystart="1661" bodyend="1669" declfile="SIScalar.h" declline="523" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aad38100b32c7aa4fa64e37275a05ee59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarRaiseToAPower</definition>
        <argsstring>(SIMutableScalarRef theScalar, double power, OCStringRef *error)</argsstring>
        <name>SIScalarRaiseToAPower</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>double</type>
          <declname>power</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Raises a scalar to an integer power. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>power</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer power. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="532" column="6" bodyfile="SIScalar.c" bodystart="1628" bodyend="1659" declfile="SIScalar.h" declline="532" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aa89d55a244d3c180427f58774dda6cc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByTakingAbsoluteValue</definition>
        <argsstring>(SIScalarRef theScalar, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByTakingAbsoluteValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by taking absolute values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if operation cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="540" column="13" bodyfile="SIScalar.c" bodystart="1693" bodyend="1701" declfile="SIScalar.h" declline="540" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aac11e962df7fb17aa14ba7caf7668185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarTakeAbsoluteValue</definition>
        <argsstring>(SIMutableScalarRef theScalar, OCStringRef *error)</argsstring>
        <name>SIScalarTakeAbsoluteValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Takes absolute values of a scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="548" column="6" bodyfile="SIScalar.c" bodystart="1671" bodyend="1691" declfile="SIScalar.h" declline="548" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a74576e95b0c04077b9c5f46ddf31d684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByGammaFunctionWithoutReducingUnit</definition>
        <argsstring>(SIScalarRef theScalar, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByGammaFunctionWithoutReducingUnit</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar with Gamma function without reducing unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if operation cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="556" column="13" bodyfile="SIScalar.c" bodystart="1703" bodyend="1730" declfile="SIScalar.h" declline="556" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a2454cac46d96483479031f31e7c85b1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByTakingNthRoot</definition>
        <argsstring>(SIScalarRef theScalar, uint8_t root, OCStringRef *error)</argsstring>
        <name>SIScalarCreateByTakingNthRoot</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>root</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by taking the Nth root. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer root. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object, or NULL if operation cannot be done. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="565" column="13" bodyfile="SIScalar.c" bodystart="1854" bodyend="1862" declfile="SIScalar.h" declline="565" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a6698d80aeea7be6c019e29ab990489da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarTakeNthRoot</definition>
        <argsstring>(SIMutableScalarRef theScalar, uint8_t root, OCStringRef *error)</argsstring>
        <name>SIScalarTakeNthRoot</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>root</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Takes the Nth root of the scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer root. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="574" column="6" bodyfile="SIScalar.c" bodystart="1822" bodyend="1852" declfile="SIScalar.h" declline="574" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ada2d52caaaf6fb58818c359a7a542ad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarTakeLog10</definition>
        <argsstring>(SIMutableScalarRef theScalar, OCStringRef *error)</argsstring>
        <name>SIScalarTakeLog10</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Takes the log10 of the scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An OCString describing the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="582" column="6" bodyfile="SIScalar.c" bodystart="1865" bodyend="1892" declfile="SIScalar.h" declline="582" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a833180590058cdec360e3f19e185d772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByZeroingPart</definition>
        <argsstring>(SIScalarRef theScalar, complexPart part)</argsstring>
        <name>SIScalarCreateByZeroingPart</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_quantity_8h_1a5983127ddf9bb6c2e0569779bb8f5528" kindref="member">complexPart</ref></type>
          <declname>part</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by zeroing part of its value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>The part to zero. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="590" column="13" bodyfile="SIScalar.c" bodystart="1955" bodyend="1962" declfile="SIScalar.h" declline="590" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1afe1f8d80b837b328b4145ddce02e4c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarZeroPart</definition>
        <argsstring>(SIMutableScalarRef theScalar, complexPart part)</argsstring>
        <name>SIScalarZeroPart</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_quantity_8h_1a5983127ddf9bb6c2e0569779bb8f5528" kindref="member">complexPart</ref></type>
          <declname>part</declname>
        </param>
        <briefdescription>
<para>Zero part of the scalar&apos;s value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>The part to zero. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="598" column="6" bodyfile="SIScalar.c" bodystart="1895" bodyend="1953" declfile="SIScalar.h" declline="598" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ab73c0766cd0fbd00f0a8db08ca65d878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarMultiplyByDimensionlessRealConstant</definition>
        <argsstring>(SIMutableScalarRef theScalar, double constant)</argsstring>
        <name>SIScalarMultiplyByDimensionlessRealConstant</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>double</type>
          <declname>constant</declname>
        </param>
        <briefdescription>
<para>Multiplies a scalar by a dimensionless real constant. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constant</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimensionless constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="606" column="6" bodyfile="SIScalar.c" bodystart="1732" bodyend="1750" declfile="SIScalar.h" declline="606" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a1d47a6ec624ebf9f6aa9c1b725ae9467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByMultiplyingByDimensionlessRealConstant</definition>
        <argsstring>(SIScalarRef theScalar, double constant)</argsstring>
        <name>SIScalarCreateByMultiplyingByDimensionlessRealConstant</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>double</type>
          <declname>constant</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by multiplying by a dimensionless real constant. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constant</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimensionless real constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="614" column="13" bodyfile="SIScalar.c" bodystart="1752" bodyend="1761" declfile="SIScalar.h" declline="614" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ab21479f3800a5f8987efe8cd9f8e6e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByMultiplyingByDimensionlessComplexConstant</definition>
        <argsstring>(SIScalarRef theScalar, double _Complex constant)</argsstring>
        <name>SIScalarCreateByMultiplyingByDimensionlessComplexConstant</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>double _Complex</type>
          <declname>constant</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by multiplying by a dimensionless complex constant. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constant</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimensionless complex constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="622" column="13" bodyfile="SIScalar.c" bodystart="1784" bodyend="1791" declfile="SIScalar.h" declline="622" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a4f64b199974397daed9f9077f13faec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarMultiplyByDimensionlessComplexConstant</definition>
        <argsstring>(SIMutableScalarRef theScalar, double _Complex constant)</argsstring>
        <name>SIScalarMultiplyByDimensionlessComplexConstant</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>double _Complex</type>
          <declname>constant</declname>
        </param>
        <briefdescription>
<para>Multiplies a scalar by a dimensionless complex constant. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constant</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimensionless constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="630" column="6" bodyfile="SIScalar.c" bodystart="1763" bodyend="1782" declfile="SIScalar.h" declline="630" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ad525807959f529cf2e377144a9c6bee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef SIScalarCreateByConjugation</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarCreateByConjugation</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Creates a scalar by conjugation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SIScalar object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="637" column="13" bodyfile="SIScalar.c" bodystart="1813" bodyend="1820" declfile="SIScalar.h" declline="637" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a8a4239f31de8e502c21b90874e8f026d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarConjugate</definition>
        <argsstring>(SIMutableScalarRef theScalar)</argsstring>
        <name>SIScalarConjugate</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Conjugates a scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating success of operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="644" column="6" bodyfile="SIScalar.c" bodystart="1793" bodyend="1811" declfile="SIScalar.h" declline="644" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a2a34dd5cb7346f5c67781f92c9770898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIScalarShow</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarShow</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Prints a short descriptor of the scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="651" column="6" bodyfile="SIScalar.c" bodystart="2545" bodyend="2555" declfile="SIScalar.h" declline="651" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a13d59fede000af553c063ed16d691d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OCStringRef</type>
        <definition>OCStringRef SIScalarCreateStringValue</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarCreateStringValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Creates a string value representation of the scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An OCString object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="658" column="13" bodyfile="SIScalar.c" bodystart="2602" bodyend="2621" declfile="SIScalar.h" declline="658" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1affca2a0f2c0796fa9c9c9aaaccf55e80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OCStringRef</type>
        <definition>OCStringRef SIScalarCreateNumericStringValue</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarCreateNumericStringValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Creates a string value representation of the numeric part of the scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An OCString object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="665" column="13" bodyfile="SIScalar.c" bodystart="2583" bodyend="2600" declfile="SIScalar.h" declline="665" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ae30b1f110e453f8c77e776a7436f69a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OCStringRef</type>
        <definition>OCStringRef SIScalarCreateStringValueForPart</definition>
        <argsstring>(SIScalarRef theScalar, complexPart thePart)</argsstring>
        <name>SIScalarCreateStringValueForPart</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_quantity_8h_1a5983127ddf9bb6c2e0569779bb8f5528" kindref="member">complexPart</ref></type>
          <declname>thePart</declname>
        </param>
        <briefdescription>
<para>Creates a string value representation for the part of the scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thePart</parametername>
</parameternamelist>
<parameterdescription>
<para>The part of the scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An OCString object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="673" column="13" bodyfile="SIScalar.c" bodystart="2623" bodyend="2630" declfile="SIScalar.h" declline="673" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a1171ae9900d4eb072b3c3177ad99869a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OCStringRef</type>
        <definition>OCStringRef SIScalarCreateUnitString</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarCreateUnitString</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Creates a string value representation of the unit of the scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An OCString object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="680" column="13" bodyfile="SIScalar.c" bodystart="2676" bodyend="2682" declfile="SIScalar.h" declline="680" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a3e3321d48da28c9f91db264a78ce18cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OCStringRef</type>
        <definition>OCStringRef SIScalarCreateStringValueWithFormat</definition>
        <argsstring>(SIScalarRef theScalar, OCStringRef format)</argsstring>
        <name>SIScalarCreateStringValueWithFormat</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>OCStringRef</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Creates a string value representation of the scalar using format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The format. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An OCString object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="688" column="13" bodyfile="SIScalar.c" bodystart="2684" bodyend="2758" declfile="SIScalar.h" declline="688" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a7a2723bef925a3c95053bb603182d669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OCStringRef</type>
        <definition>OCStringRef SIScalarCreateNumericStringValueWithFormat</definition>
        <argsstring>(SIScalarRef theScalar, OCStringRef format)</argsstring>
        <name>SIScalarCreateNumericStringValueWithFormat</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>OCStringRef</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Creates a string value representation of the numeric part of the scalar using format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The format. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An OCString object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="696" column="13" bodyfile="SIScalar.c" bodystart="2632" bodyend="2674" declfile="SIScalar.h" declline="696" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a02f00b56378b057972c26e8ea821b2a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIScalarAddToArrayAsStringValue</definition>
        <argsstring>(SIScalarRef theScalar, OCMutableArrayRef array)</argsstring>
        <name>SIScalarAddToArrayAsStringValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>OCMutableArrayRef</type>
          <declname>array</declname>
        </param>
        <briefdescription>
<para>Adds the scalar to an array as a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="703" column="6" bodyfile="SIScalar.c" bodystart="2760" bodyend="2767" declfile="SIScalar.h" declline="703" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a91df1367c29fbf1e4fefd17fe319f201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarIsReal</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarIsReal</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Tests if scalar is real. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="711" column="6" bodyfile="SIScalar.c" bodystart="2771" bodyend="2777" declfile="SIScalar.h" declline="711" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1ac7808439acd27c23c80f1ad58b6a8ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarIsImaginary</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarIsImaginary</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Tests if scalar is purely imaginary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="718" column="6" bodyfile="SIScalar.c" bodystart="2779" bodyend="2785" declfile="SIScalar.h" declline="718" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a99cf86a454d157cc31ad81ea5112163f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarIsComplex</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarIsComplex</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Tests if scalar is complex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="725" column="6" bodyfile="SIScalar.c" bodystart="2787" bodyend="2793" declfile="SIScalar.h" declline="725" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a78cc0116b408eac1226b0c318f1f6de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarIsZero</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarIsZero</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Tests if scalar is zero. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="732" column="6" bodyfile="SIScalar.c" bodystart="2795" bodyend="2802" declfile="SIScalar.h" declline="732" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a1b9cffc79ff27fe72e1d56ecae9d0e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarIsInfinite</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarIsInfinite</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Tests if scalar is infinite. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="739" column="6" bodyfile="SIScalar.c" bodystart="2804" bodyend="2820" declfile="SIScalar.h" declline="739" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a032a7852c3087bf821021113e4918cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarIsRealNonNegativeInteger</definition>
        <argsstring>(SIScalarRef theScalar)</argsstring>
        <name>SIScalarIsRealNonNegativeInteger</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <briefdescription>
<para>Tests if scalar is real and a non-negative integer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="746" column="6" bodyfile="SIScalar.c" bodystart="2822" bodyend="2832" declfile="SIScalar.h" declline="746" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1adb14dd9e28cd1cda832d64f53eb2033c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarValidateProposedStringValue</definition>
        <argsstring>(SIScalarRef theScalar, OCStringRef proposedStringValue, OCStringRef *error)</argsstring>
        <name>SIScalarValidateProposedStringValue</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type>OCStringRef</type>
          <declname>proposedStringValue</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Validates whether a proposed string contains a scalar quantity with the same dimensionality as the scalar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proposedStringValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Proposed string containing a quantity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to error message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating true or false.</para>
</simplesect>
It is the responsibility of the calling method to release the CFError object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="756" column="6" bodyfile="SIScalar.c" bodystart="2557" bodyend="2581" declfile="SIScalar.h" declline="756" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1a8520d2fe3bb1dfed954a6ee4a37455d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIScalarEqual</definition>
        <argsstring>(SIScalarRef input1, SIScalarRef input2)</argsstring>
        <name>SIScalarEqual</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input1</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>input2</declname>
        </param>
        <briefdescription>
<para>Determines if the two scalars are equal in every attribute. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="764" column="6" bodyfile="SIScalar.c" bodystart="2834" bodyend="2862" declfile="SIScalar.h" declline="764" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1af0ccf17cf50a58678feb583faecb1b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OCComparisonResult</type>
        <definition>OCComparisonResult SIScalarCompare</definition>
        <argsstring>(SIScalarRef scalar, SIScalarRef otherScalar)</argsstring>
        <name>SIScalarCompare</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>scalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>otherScalar</declname>
        </param>
        <briefdescription>
<para>Compares two scalars and returns a comparison result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The first scalar object to compare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>otherScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The second scalar object to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A OCComparisonResult constant that indicates whether number is equal to, less than, or greater than otherNumber. Possible values are kOCCompareLessThan, kOCCompareEqualTo, kOCCompareGreaterThan, or kOCCompareUnequalDimensionalities. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="773" column="20" bodyfile="SIScalar.c" bodystart="2864" bodyend="3020" declfile="SIScalar.h" declline="773" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aff44cf1ff8c5b5cac231cbf287aec9da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OCComparisonResult</type>
        <definition>OCComparisonResult SIScalarCompareReduced</definition>
        <argsstring>(SIScalarRef theScalar, SIScalarRef theOtherScalar)</argsstring>
        <name>SIScalarCompareReduced</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theOtherScalar</declname>
        </param>
        <briefdescription>
<para>Compares two scalars in reduced units and returns a comparison result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The first scalar object to compare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theOtherScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The second scalar object to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A OCComparisonResult constant that indicates whether number is equal to, less than, or greater than otherNumber. Possible values are kOCCompareLessThan, kOCCompareEqualTo, kOCCompareGreaterThan, or kOCCompareUnequalDimensionalities. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="782" column="20" bodyfile="SIScalar.c" bodystart="3022" bodyend="3032" declfile="SIScalar.h" declline="782" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_8h_1aa27de8bd2878818d18b4b33d5d0e09a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OCComparisonResult</type>
        <definition>OCComparisonResult SIScalarCompareLoose</definition>
        <argsstring>(SIScalarRef theScalar, SIScalarRef theOtherScalar)</argsstring>
        <name>SIScalarCompareLoose</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theScalar</declname>
        </param>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>theOtherScalar</declname>
        </param>
        <briefdescription>
<para>Compares two scalars loosely and returns a comparison result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The first scalar object to compare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theOtherScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The second scalar object to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A OCComparisonResult constant that indicates whether number is equal to, less than, or greater than otherNumber. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalar.h" line="790" column="20" bodyfile="SIScalar.c" bodystart="3034" bodyend="3186" declfile="SIScalar.h" declline="790" declcolumn="20"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Declares the SIScalar interface for representing and manipulating scalar values in the SI system. </para>
    </briefdescription>
    <detaileddescription>
<para>SIScalar provides an interface for scalar values, supporting arithmetic operations, type queries, and conversions. The API is CoreFoundation-style, with explicit memory management and reference counting.</para>
<para>SIScalar objects are immutable by default; use <ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref> for mutable variants.</para>
<para>This interface supports querying the value, type, and conversions of a scalar, as well as arithmetic and comparison operations.</para>
<para><simplesect kind="author"><para>Philip Grandinetti </para>
</simplesect>
<simplesect kind="copyright"><para>PhySy Ltd. </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>SIScalar.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>SITypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>philip<sp/>on<sp/>6/14/17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>©<sp/>2017<sp/>PhySy<sp/>Ltd.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SIScalar_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIScalar_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SILibrary.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="union_____s_i_number" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_____s_i_number" kindref="compound">__SINumber</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>floatValue;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>doubleValue;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>complex<sp/>floatComplexValue;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>doubleComplexValue;</highlight></codeline>
<codeline lineno="42" refid="_s_i_scalar_8h_1abfa6458317d41ba318d2ef65cb6e636e" refkind="member"><highlight class="normal">}<sp/><ref refid="union_____s_i_number" kindref="compound">__SINumber</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_____s_i_scalar" kindref="compound">__SIScalar</ref><sp/>*<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_____s_i_scalar" kindref="compound">__SIScalar</ref><sp/>*<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">OCTypeID<sp/><ref refid="_s_i_scalar_8h_1ae73ca7ef4537227256f6ee2ae9a6aee0" kindref="member">SIScalarGetTypeID</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>Creators</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1af6ad9941f221e08b720cf78d258469ec" kindref="member">SIScalarCreateCopy</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a5a4eae72c05f0cd99d3f28e4a8e362ee" kindref="member">SIScalarCreateMutableCopy</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1ae51f925cba2fa406727411c6f9333c08" kindref="member">SIScalarCreateWithFloat</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>input_value,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a45e2f5d6f6dea3e55bf20c5ad61442b7" kindref="member">SIScalarCreateMutableWithFloat</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>input_value,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a2371d11d3cb75ffaab47817ccda03d7e" kindref="member">SIScalarCreateWithDouble</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>input_value,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a687b82fc021bf7b637cf62affb5931bc" kindref="member">SIScalarCreateMutableWithDouble</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>input_value,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1aed59f1dfb9a2fa1c5df27082f816595a" kindref="member">SIScalarCreateWithFloatComplex</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>complex<sp/>input_value,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1af8f30169fd64ac27af25a9f77a396ca4" kindref="member">SIScalarCreateMutableWithFloatComplex</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>complex<sp/>input_value,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a2f2aebbf0c3110cdec18654e6cb174fd" kindref="member">SIScalarCreateWithDoubleComplex</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>input_value,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a824aa42d425169ea96d4197f87dca776" kindref="member">SIScalarCreateMutableWithDoubleComplex</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>input_value,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1aa2e50aa931bd4fbf0082e61179077e75" kindref="member">SIScalarCreateWithStringContainingSingleUnitFromLibrary</ref>(OCStringRef<sp/>theString);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>Accessors</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="union_____s_i_number" kindref="compound">__SINumber</ref><sp/><ref refid="_s_i_scalar_8h_1acb83c99dcbadf14906601e2ac6d16ab1" kindref="member">SIScalarGetValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1aee93f8a43574ca584073e24185b4ef3f" kindref="member">SIScalarSetFloatValue</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a2c82abbde15f38a49f84d72bb0105d65" kindref="member">SIScalarSetDoubleValue</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a37709d874b4f8935a428d13e8c772a91" kindref="member">SIScalarSetFloatComplexValue</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>complex<sp/>value);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a697d8dc166fd17e955ec42ea2f18332d" kindref="member">SIScalarSetDoubleComplexValue</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>value);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a1f82a304e43c692d7cd6e838d58ca065" kindref="member">SIScalarSetElementType</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/>numberType<sp/>elementType);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1afd86f58aa4ac3338cebf0b5381fb8e5d" kindref="member">SIScalarFloatValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1aef133da263cd2e705deb20078f7db309" kindref="member">SIScalarDoubleValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>complex<sp/><ref refid="_s_i_scalar_8h_1adac3474927153359307977461f1968c3" kindref="member">SIScalarFloatComplexValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/><ref refid="_s_i_scalar_8h_1a4a72448bde735398fe52b1b41bfe9357" kindref="member">SIScalarDoubleComplexValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1ae18f03fc24864a424e5b85b63b37400b" kindref="member">SIScalarMagnitudeValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a8beeac762a9466e5c81959feed0b51c2" kindref="member">SIScalarArgumentValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a09dfb1b3a8c488c64e38f7d04b83c138" kindref="member">SIScalarFloatValueInUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*success);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a15e42e708d9530fe3691ab8bb4f807b1" kindref="member">SIScalarDoubleValueInUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*success);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>complex<sp/><ref refid="_s_i_scalar_8h_1a08973dd70fd31016cd096132e40607f0" kindref="member">SIScalarFloatComplexValueInUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*success);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/><ref refid="_s_i_scalar_8h_1a25ee1924e146f0d2e149c62876d68984" kindref="member">SIScalarDoubleComplexValueInUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*success);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a26066eae739cb00d411f8db68ea24009" kindref="member">SIScalarFloatValueInCoherentUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a96a0168dab04f04cde0369eee709d2c2" kindref="member">SIScalarDoubleValueInCoherentUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>complex<sp/><ref refid="_s_i_scalar_8h_1aef06532677e4ef24bec545f21ae69e87" kindref="member">SIScalarFloatComplexValueInCoherentUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/><ref refid="_s_i_scalar_8h_1aa956a5675cc052badc3d98d31ef652df" kindref="member">SIScalarDoubleComplexValueInCoherentUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>Operations</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1ab52ef39219c2374d068d1ff6126b0c33" kindref="member">SIScalarCreateByConvertingToNumberType</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/>numberType<sp/>elementType);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a72be073d1d7d847db53326244e4c7db7" kindref="member">SIScalarTakeComplexPart</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_quantity_8h_1a5983127ddf9bb6c2e0569779bb8f5528" kindref="member">complexPart</ref><sp/>part);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1aa84b2b2d1077869403ad6206c7542c77" kindref="member">SIScalarCreateByTakingComplexPart</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_quantity_8h_1a5983127ddf9bb6c2e0569779bb8f5528" kindref="member">complexPart</ref><sp/>part);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="_s_i_scalar_8h_1a5d54f1cba04975059e42d78c6fb4b10c" refkind="member"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a5d54f1cba04975059e42d78c6fb4b10c" kindref="member">SIScalarCreateWithOCString</ref>(OCStringRef<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1abac2ae228535f3d26163282e0b65ba81" kindref="member">SIScalarCreateByReducingUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a3677eb2468ac84a15844cd25151399c5" kindref="member">SIScalarReduceUnit</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a5b786161f6d7945b49265a2044cf4687" kindref="member">SIScalarConvertToUnit</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1accae31270079adac1d12c1f1176cac74" kindref="member">SIScalarCreateByConvertingToUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a48d501564d32aa25564096a01d71442f" kindref="member">SIScalarConvertToCoherentUnit</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1ae1afd60d765f3527f3e23ce056090855" kindref="member">SIScalarCreateByConvertingToCoherentUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a60819e4dc3b1446d560a67e44102b261" kindref="member">SIScalarCreateByAdding</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input1,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1aba05d6673cc9e3297badeecfcff311ab" kindref="member">SIScalarAdd</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>target,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a0fc57dfa64cf9ec1b97e523964d62d1c" kindref="member">SIScalarCreateBySubtracting</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input1,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1af86021ed84856607473dceabffb5bc49" kindref="member">SIScalarSubtract</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>target,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1ac5ebd466101d33c39529032e8166be61" kindref="member">SIScalarCreateByMultiplyingWithoutReducingUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input1,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a351aaadedc33399a02e239abe9090b7e" kindref="member">SIScalarMultiplyWithoutReducingUnit</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>target,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a5383911a73021f9c8c7d6194c102d6d7" kindref="member">SIScalarCreateByMultiplying</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input1,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1acf385da2dd8cd404fe0ec612dd1883d4" kindref="member">SIScalarMultiply</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>target,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a10524a64224b828383921a8242143f49" kindref="member">SIScalarCreateByDividingWithoutReducingUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input1,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a191f41282c2325d4f6fe546fd21c72b4" kindref="member">SIScalarDivideWithoutReducingUnit</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>target,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1ab0b7351461dcc0ff7ad993dfdb931f32" kindref="member">SIScalarCreateByDividing</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input1,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a7e783c56f337e132d2619d3a39d74214" kindref="member">SIScalarDivide</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>target,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a325f89b6d438e8ba3c4e94abf9f6026d" kindref="member">SIScalarCreateByRaisingToAPowerWithoutReducingUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>power,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a0b1bc4c9406666f375e344859e9fb491" kindref="member">SIScalarRaiseToAPowerWithoutReducingUnit</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>power,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a2eec1e13d0a6d0d53760ef6472bd11d9" kindref="member">SIScalarCreateByRaisingToAPower</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>power,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1aad38100b32c7aa4fa64e37275a05ee59" kindref="member">SIScalarRaiseToAPower</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>power,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1aa89d55a244d3c180427f58774dda6cc7" kindref="member">SIScalarCreateByTakingAbsoluteValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1aac11e962df7fb17aa14ba7caf7668185" kindref="member">SIScalarTakeAbsoluteValue</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a74576e95b0c04077b9c5f46ddf31d684" kindref="member">SIScalarCreateByGammaFunctionWithoutReducingUnit</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a2454cac46d96483479031f31e7c85b1d" kindref="member">SIScalarCreateByTakingNthRoot</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/>uint8_t<sp/>root,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a6698d80aeea7be6c019e29ab990489da" kindref="member">SIScalarTakeNthRoot</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/>uint8_t<sp/>root,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1ada2d52caaaf6fb58818c359a7a542ad7" kindref="member">SIScalarTakeLog10</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a833180590058cdec360e3f19e185d772" kindref="member">SIScalarCreateByZeroingPart</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_quantity_8h_1a5983127ddf9bb6c2e0569779bb8f5528" kindref="member">complexPart</ref><sp/>part);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1afe1f8d80b837b328b4145ddce02e4c2f" kindref="member">SIScalarZeroPart</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_quantity_8h_1a5983127ddf9bb6c2e0569779bb8f5528" kindref="member">complexPart</ref><sp/>part);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1ab73c0766cd0fbd00f0a8db08ca65d878" kindref="member">SIScalarMultiplyByDimensionlessRealConstant</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>constant);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1a1d47a6ec624ebf9f6aa9c1b725ae9467" kindref="member">SIScalarCreateByMultiplyingByDimensionlessRealConstant</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>constant);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1ab21479f3800a5f8987efe8cd9f8e6e35" kindref="member">SIScalarCreateByMultiplyingByDimensionlessComplexConstant</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>constant);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a4f64b199974397daed9f9077f13faec5" kindref="member">SIScalarMultiplyByDimensionlessComplexConstant</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>constant);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/><ref refid="_s_i_scalar_8h_1ad525807959f529cf2e377144a9c6bee0" kindref="member">SIScalarCreateByConjugation</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a8a4239f31de8e502c21b90874e8f026d" kindref="member">SIScalarConjugate</ref>(<ref refid="_s_i_scalar_8h_1ae920fb2cd07c07b91f1fb602a0c04fcf" kindref="member">SIMutableScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>Strings<sp/>and<sp/>Archiving</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a2a34dd5cb7346f5c67781f92c9770898" kindref="member">SIScalarShow</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal">OCStringRef<sp/><ref refid="_s_i_scalar_8h_1a13d59fede000af553c063ed16d691d04" kindref="member">SIScalarCreateStringValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal">OCStringRef<sp/><ref refid="_s_i_scalar_8h_1affca2a0f2c0796fa9c9c9aaaccf55e80" kindref="member">SIScalarCreateNumericStringValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">OCStringRef<sp/><ref refid="_s_i_scalar_8h_1ae30b1f110e453f8c77e776a7436f69a0" kindref="member">SIScalarCreateStringValueForPart</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_quantity_8h_1a5983127ddf9bb6c2e0569779bb8f5528" kindref="member">complexPart</ref><sp/>thePart);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal">OCStringRef<sp/><ref refid="_s_i_scalar_8h_1a1171ae9900d4eb072b3c3177ad99869a" kindref="member">SIScalarCreateUnitString</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal">OCStringRef<sp/><ref refid="_s_i_scalar_8h_1a3e3321d48da28c9f91db264a78ce18cd" kindref="member">SIScalarCreateStringValueWithFormat</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/>OCStringRef<sp/>format);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal">OCStringRef<sp/><ref refid="_s_i_scalar_8h_1a7a2723bef925a3c95053bb603182d669" kindref="member">SIScalarCreateNumericStringValueWithFormat</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/>OCStringRef<sp/>format);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a02f00b56378b057972c26e8ea821b2a2" kindref="member">SIScalarAddToArrayAsStringValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/>OCMutableArrayRef<sp/>array);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>Tests</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a91df1367c29fbf1e4fefd17fe319f201" kindref="member">SIScalarIsReal</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1ac7808439acd27c23c80f1ad58b6a8ae3" kindref="member">SIScalarIsImaginary</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a99cf86a454d157cc31ad81ea5112163f" kindref="member">SIScalarIsComplex</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a78cc0116b408eac1226b0c318f1f6de6" kindref="member">SIScalarIsZero</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a1b9cffc79ff27fe72e1d56ecae9d0e08" kindref="member">SIScalarIsInfinite</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a032a7852c3087bf821021113e4918cf5" kindref="member">SIScalarIsRealNonNegativeInteger</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1adb14dd9e28cd1cda832d64f53eb2033c" kindref="member">SIScalarValidateProposedStringValue</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/>OCStringRef<sp/>proposedStringValue,<sp/>OCStringRef<sp/>*error);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_i_scalar_8h_1a8520d2fe3bb1dfed954a6ee4a37455d5" kindref="member">SIScalarEqual</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input1,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>input2);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal">OCComparisonResult<sp/><ref refid="_s_i_scalar_8h_1af0ccf17cf50a58678feb583faecb1b8e" kindref="member">SIScalarCompare</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>scalar,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>otherScalar);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal">OCComparisonResult<sp/><ref refid="_s_i_scalar_8h_1aff44cf1ff8c5b5cac231cbf287aec9da" kindref="member">SIScalarCompareReduced</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theOtherScalar);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal">OCComparisonResult<sp/><ref refid="_s_i_scalar_8h_1aa27de8bd2878818d18b4b33d5d0e09a6" kindref="member">SIScalarCompareLoose</ref>(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theScalar,<sp/><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>theOtherScalar);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SIScalar_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="SIScalar.h"/>
  </compounddef>
</doxygen>
