<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_s_i_scalar_scanner_8l" kind="file" language="Lex">
    <compoundname>SIScalarScanner.l</compoundname>
    <includes refid="_s_i_library_8h" local="yes">SILibrary.h</includes>
    <includes refid="_s_i_scalar_parser_8h" local="yes">SIScalarParser.h</includes>
    <includes local="yes">SIScalar.tab.h</includes>
    <incdepgraph>
      <node id="5">
        <label>SIDimensionality.h</label>
        <link refid="_s_i_dimensionality_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>SIDimensionalityParser.h</label>
        <link refid="_s_i_dimensionality_parser_8h_source"/>
      </node>
      <node id="2">
        <label>SILibrary.h</label>
        <link refid="_s_i_library_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>SIQuantity.h</label>
        <link refid="_s_i_quantity_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>SIScalar.h</label>
        <link refid="_s_i_scalar_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>SIScalarConstants.h</label>
        <link refid="_s_i_scalar_constants_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>SIScalarParser.h</label>
        <link refid="_s_i_scalar_parser_8h_source"/>
      </node>
      <node id="1">
        <label>SIScalarScanner.l</label>
        <link refid="_s_i_scalar_scanner_8l"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SIUnit.h</label>
        <link refid="_s_i_unit_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>SIUnitParser.h</label>
        <link refid="_s_i_unit_parser_8h_source"/>
      </node>
      <node id="4">
        <label>OCTypes/OCLibrary.h</label>
      </node>
      <node id="15">
        <label>SIScalar.tab.h</label>
      </node>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_s_i_scalar_scanner_8l_1af9a591df2337999571091a86d2fe020d" prot="public" static="yes" mutable="no">
        <type>double _Complex</type>
        <definition>double _Complex temp</definition>
        <argsstring></argsstring>
        <name>temp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarScanner.l" line="10" column="28" bodyfile="SIScalarScanner.l" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_s_i_scalar_scanner_8l_1a55d01ec3a34a300b00a2e6e14eee1e44" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void siserror</definition>
        <argsstring>(char *s,...)</argsstring>
        <name>siserror</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarScanner.l" line="6" column="18" declfile="SIScalarScanner.l" declline="6" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_scanner_8l_1a4e89896b053415276c38667c9fb55af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sislex</definition>
        <argsstring>(void)</argsstring>
        <name>sislex</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarScanner.l" line="41" column="5" bodyfile="SIScalarScanner.l" bodystart="41" bodyend="195"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">%option<sp/>noyywrap<sp/>nodefault</highlight></codeline>
<codeline lineno="2"><highlight class="normal">%option<sp/>prefix<sp/>=<sp/>&quot;sis&quot;</highlight></codeline>
<codeline lineno="3"><highlight class="normal">%option<sp/>nounput</highlight></codeline>
<codeline lineno="4"><highlight class="normal">%option<sp/>noinput</highlight></codeline>
<codeline lineno="5"><highlight class="normal">%{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>siserror(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/>...);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;SILibrary.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;SIScalarParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;SIScalar.tab.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>temp;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">%}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">%x<sp/>together</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>exponent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">DIGIT<sp/><sp/><sp/>[0-9]</highlight></codeline>
<codeline lineno="17"><highlight class="normal">EXP<sp/><sp/><sp/><sp/><sp/>([Ee][-+]?[0-9]+)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">REALNUMBER<sp/>{DIGIT}+&quot;.&quot;{DIGIT}*{EXP}?|&quot;.&quot;?{DIGIT}+{EXP}?</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">OLDCOMPLEXNUMBER<sp/>\({REALNUMBER}[<sp/>]*[-+][<sp/>]*({REALNUMBER}[<sp/>]*\*[<sp/>]*)?I[<sp/>]*\)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">COMPLEXNUMBER<sp/>{REALNUMBER}[<sp/>]*[-+][<sp/>]*({REALNUMBER}[<sp/>]*\*[<sp/>]*)?I[<sp/>]*</highlight></codeline>
<codeline lineno="22"><highlight class="normal">OLDUNIT<sp/>(([a-zA-HJ-Z%ΩÅℏ°πµ]+)0?(\^[-+]?[0-9]+)?)([\*\/](([a-zA-HJ-Z%ΩÅℏ°πµ]+)0?(\^[-+]?[0-9]+)?))*</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>unit<sp/>can<sp/>be<sp/>constant<sp/>starting<sp/>with<sp/>&amp;</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>unit<sp/>can<sp/>be<sp/>constant<sp/>ending<sp/>with<sp/>0</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>unit<sp/>can<sp/>be<sp/>symbol<sp/>raised<sp/>to<sp/>arbitrary<sp/>power.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">UNITCONSTANT<sp/>([a-zA-HJ-Z%ΩΛƛÅℏ°πσΦµεαλ∞\_]+)0?</highlight></codeline>
<codeline lineno="29"><highlight class="normal">CONSTANT<sp/>(&amp;[a-zA-HJ-Z]+)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">UNITPOWER<sp/>([a-zA-HJ-Z%ΩÅℏ°πσΦµε\_]+)(\^[-+]?[0-9]+)?</highlight></codeline>
<codeline lineno="31"><highlight class="normal">UNITPOWER2<sp/>([a-zA-HJ-Z%ΩÅℏ°πσΦµε\_]+)(\^\([-+]?[0-9]+\))?</highlight></codeline>
<codeline lineno="32"><highlight class="normal">INVERSEUNITPOWER<sp/>([(][1][/]{UNITPOWER}[)])</highlight></codeline>
<codeline lineno="33"><highlight class="normal">UNIT<sp/>{CONSTANT}|{UNITCONSTANT}|{UNITPOWER}|{UNITPOWER2}|{INVERSEUNITPOWER}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">BADNUMBER<sp/>{DIGIT}*(&quot;.&quot;){DIGIT}*(&quot;.&quot;)|(&quot;.&quot;)(&quot;.&quot;)|(&quot;.&quot;)(&quot;<sp/>&quot;)*(&quot;.&quot;)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">BADUNIT<sp/>{UNIT}{UNIT}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">OLDSTRING<sp/>\[[a-zA-Z][a-zA-Z0-9]*\]</highlight></codeline>
<codeline lineno="40"><highlight class="normal">STRING<sp/>\[[()a-zA-Z][()a-zA-Z0-9]*\*?[()a-zA-Z0-9]*\]</highlight></codeline>
<codeline lineno="41"><highlight class="normal">%%</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal"><sp/>|</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>|</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"><sp/>|</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>|</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal"><sp/>|</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal"><sp/>|</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>|</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yytext[0];}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;acos&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_acos;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;acosh&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_acosh;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;asin&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_asin;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;asinh&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_asinh;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;atan&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_atan;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;atanh&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_atanh;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;cos&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_cos;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;cosh&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_cosh;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;sin&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_sin;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;sinh&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_sinh;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;tan&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_tan;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;tanh&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_tanh;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;erf&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_erf;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;erfc&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_erfc;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;exp&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_exp;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ln&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_ln;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;log&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_log;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;conj&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_conj;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;creal&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_creal;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;cimag&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_cimag;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;carg&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_carg;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;cabs&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_cabs;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;sqrt&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_sqrt;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;cbrt&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_cbrt;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;qtrt&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_qtrt;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;reduce&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.math_fn<sp/>=<sp/>BM_reduce;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MATH_FUNC;}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;aw&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.const_fn<sp/>=<sp/>BC_AW;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONST_FUNC;}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fw&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.const_fn<sp/>=<sp/>BC_FW;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONST_FUNC;}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;abundance&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{sislval.const_fn<sp/>=<sp/>BC_Isotope_Abundance;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONST_FUNC;}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;𝛾_I&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.const_fn<sp/>=<sp/>BC_Isotope_Gyromag;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONST_FUNC;}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;µ_I&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.const_fn<sp/>=<sp/>BC_Isotope_MagneticDipole;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONST_FUNC;}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Q_I&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.const_fn<sp/>=<sp/>BC_Isotope_ElectricQuadrupole;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONST_FUNC;}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;nmr&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.const_fn<sp/>=<sp/>BC_nmr;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONST_FUNC;}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;spin&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.const_fn<sp/>=<sp/>BC_Isotope_Spin;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONST_FUNC;}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;t_½&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{sislval.const_fn<sp/>=<sp/>BC_Isotope_HalfLife;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONST_FUNC;}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&amp;hbar&quot;</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multiplier<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit<sp/>=<sp/>SIUnitForSymbol(STR(</highlight><highlight class="stringliteral">&quot;ℏ&quot;</highlight><highlight class="normal">),&amp;multiplier,<sp/>&amp;scalarErrorString);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>SIScalarCreateWithDouble(multiplier,unit);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="stringliteral">{REALNUMBER}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>OCComplexFromCString(yytext);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>SIScalarCreateWithDoubleComplex(temp,<sp/>NULL);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="stringliteral">{COMPLEXNUMBER}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>OCComplexFromCString(yytext);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>SIScalarCreateWithDoubleComplex(temp,<sp/>NULL);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="stringliteral">{REALNUMBER}[<sp/>]*\*[<sp/>]*I[<sp/>]*</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>OCComplexFromCString(yytext);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>SIScalarCreateWithDoubleComplex(temp,<sp/>NULL);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="stringliteral">I[<sp/>]*\*[<sp/>]*{REALNUMBER}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>OCComplexFromCString(yytext);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>SIScalarCreateWithDoubleComplex(temp,<sp/>NULL);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>OCComplexFromCString(yytext);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>SIScalarCreateWithDoubleComplex(temp,<sp/>NULL);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="stringliteral">{UNIT}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>OCStringRef<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>=<sp/>OCStringCreateWithCString(yytext);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>unit_multiplier<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit<sp/>=<sp/>SIUnitForSymbol(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>&amp;unit_multiplier,<sp/>&amp;scalarErrorString);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(unit<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyterminate();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>SIScalarCreateWithDouble(unit_multiplier,<sp/>unit);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>OCRelease(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="stringliteral">{REALNUMBER}[<sp/>]*\/[<sp/>]*{UNIT}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>OCComplexFromCString(yytext);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>BEGIN(together);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="stringliteral">{UNIT}[<sp/>]*\/[<sp/>]*{REALNUMBER}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="stringliteral">{UNIT}[<sp/>]*\/[<sp/>]*{COMPLEXNUMBER}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="stringliteral">{COMPLEXNUMBER}[<sp/>]*\/[<sp/>]*{UNIT}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>OCComplexFromCString(yytext);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>BEGIN(together);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="stringliteral">{REALNUMBER}[<sp/>]*\*[<sp/>]*I[<sp/>]*\/[<sp/>]*{UNIT}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>OCComplexFromCString(yytext);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>BEGIN(together);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="stringliteral">I[<sp/>]*\*[<sp/>]*{REALNUMBER}[<sp/>]*\/[<sp/>]*{UNIT}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>OCComplexFromCString(yytext);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>BEGIN(together);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="stringliteral">&lt;together&gt;{UNIT}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>OCStringRef<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>=<sp/>OCStringCreateWithCString(yytext);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>unit_multiplier<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>unit<sp/>=<sp/>SIUnitForSymbol(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>&amp;unit_multiplier,&amp;scalarErrorString);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(unit==NULL)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyterminate();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>OCRelease(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BEGIN(INITIAL);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>SIScalarCreateWithDoubleComplex(temp*unit_multiplier,<sp/>unit);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>OCRelease(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>BEGIN(INITIAL);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="stringliteral">{STRING}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.const_string<sp/>=<sp/>OCMutableStringCreateWithCString(yytext);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONST_STRING;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="stringliteral">{BADNUMBER}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="stringliteral">{BADUNIT}</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>sislval.d<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCALAR;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="stringliteral">[<sp/>\t]+</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">/*<sp/>ignore<sp/>whitespace<sp/>*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="stringliteral">.</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(yytext[0]);}</highlight></codeline>
<codeline lineno="195"><highlight class="normal">%%</highlight></codeline>
    </programlisting>
    <location file="SIScalarScanner.l"/>
  </compounddef>
</doxygen>
