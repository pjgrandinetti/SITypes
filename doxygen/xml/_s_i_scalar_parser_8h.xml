<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_s_i_scalar_parser_8h" kind="file" language="C++">
    <compoundname>SIScalarParser.h</compoundname>
    <includedby refid="_s_i_scalar_parser_8c" local="yes">SIScalarParser.c</includedby>
    <includedby refid="_s_i_scalar_scanner_8c" local="yes">SIScalarScanner.c</includedby>
    <includedby refid="_s_i_scalar_scanner_8l" local="yes">SIScalarScanner.l</includedby>
    <invincdepgraph>
      <node id="2">
        <label>SIScalarParser.c</label>
        <link refid="_s_i_scalar_parser_8c_source"/>
      </node>
      <node id="1">
        <label>SIScalarParser.h</label>
        <link refid="_s_i_scalar_parser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SIScalarScanner.c</label>
        <link refid="_s_i_scalar_scanner_8c_source"/>
      </node>
      <node id="4">
        <label>SIScalarScanner.l</label>
        <link refid="_s_i_scalar_scanner_8l_source"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8" prot="public" static="no" strong="no">
        <type></type>
        <name>builtInMathFunctions</name>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8ad27344a9bf14293b3f890b4fed7e5946" prot="public">
          <name>BM_reduce</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8ab09e8da52d70cc309ac1c24c41c528b2" prot="public">
          <name>BM_sqrt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a4577db25dcd76eb54c91fe02d04ab479" prot="public">
          <name>BM_cbrt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a063c98cf405b79c2909bfc5e0ca55adc" prot="public">
          <name>BM_qtrt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a899530b9fb014a2168723692316d77e9" prot="public">
          <name>BM_erf</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8ad791ea63375029e4a1a141d05ca99f97" prot="public">
          <name>BM_erfc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8aefc54f6aa72fcfd38782ccc5a32e0097" prot="public">
          <name>BM_exp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8aff3f268acaabc5e69b44bfd762a7c0be" prot="public">
          <name>BM_ln</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a5c502404218eb14cb1810a4ee9a3ce0c" prot="public">
          <name>BM_log</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a174063edbcf74521630bbddb66af46a3" prot="public">
          <name>BM_acos</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8ad37f8bc63f263cdc7a72758158305c94" prot="public">
          <name>BM_acosh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a57021f2a92117c0dcdcd32bdba4dd46e" prot="public">
          <name>BM_asin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a8c8d97595ad79ca159862136dd9276d1" prot="public">
          <name>BM_asinh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8aaaf035796887dad3ac2e5ff017b9d132" prot="public">
          <name>BM_atan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a00e53b4bc94bb6b28eddf471dea8e386" prot="public">
          <name>BM_atanh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8af6fad739d21104eee8404b65246f1220" prot="public">
          <name>BM_cos</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a9a44c2f214c89627ac3795307762e18a" prot="public">
          <name>BM_cosh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a657371037c950137b490622f307f806b" prot="public">
          <name>BM_sin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8ac4162dc24588b8deb637fe9623fc4f52" prot="public">
          <name>BM_sinh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a54cb464905c7e66320d8ea965e96791a" prot="public">
          <name>BM_tan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a6165d808a5dea869d71582868f85628d" prot="public">
          <name>BM_tanh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8aa1ead148d2e74560816c20ade806970e" prot="public">
          <name>BM_conj</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a1ea364eec13d0220efdc4d933c12e6b0" prot="public">
          <name>BM_creal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8aef51652cd09d044d95858018cc99725e" prot="public">
          <name>BM_cimag</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a9348346b4466146d4fe8f3696c73dc36" prot="public">
          <name>BM_carg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1af03ad556fb76081812e9aa1bb81798d8a744f848570adcdc9e6729001d3709431" prot="public">
          <name>BM_cabs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="17" column="1" bodyfile="SIScalarParser.h" bodystart="17" bodyend="44"/>
      </memberdef>
      <memberdef kind="enum" id="_s_i_scalar_parser_8h_1a52f9febfacd7fef25441ef857995af62" prot="public" static="no" strong="no">
        <type></type>
        <name>builtInConstantFunctions</name>
        <enumvalue id="_s_i_scalar_parser_8h_1a52f9febfacd7fef25441ef857995af62a97e0e129ec95d4dd12f10b37fa2c476d" prot="public">
          <name>BC_AW</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1a52f9febfacd7fef25441ef857995af62a472008b08af36af0795fe11d45a50870" prot="public">
          <name>BC_FW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1a52f9febfacd7fef25441ef857995af62a7ca5c3c846ba2603115c16e1b4dcaac1" prot="public">
          <name>BC_Isotope_Abundance</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1a52f9febfacd7fef25441ef857995af62a5c5d9e5a7b14c9d25dd6d9b84909182a" prot="public">
          <name>BC_Isotope_Spin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1a52f9febfacd7fef25441ef857995af62ada113ae2ec9b360a86dcf03dafba3b6d" prot="public">
          <name>BC_Isotope_HalfLife</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1a52f9febfacd7fef25441ef857995af62a79f812086da00c64b8f9f05bfee4bbdf" prot="public">
          <name>BC_Isotope_Gyromag</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1a52f9febfacd7fef25441ef857995af62ad947ef96facefe30f8eff3dfd5b87dfa" prot="public">
          <name>BC_Isotope_MagneticDipole</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1a52f9febfacd7fef25441ef857995af62a7ccbc5dd4a290e699ea778a8f927d8f6" prot="public">
          <name>BC_Isotope_ElectricQuadrupole</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_i_scalar_parser_8h_1a52f9febfacd7fef25441ef857995af62abfcd235744ac61db7a58045e2aa66e65" prot="public">
          <name>BC_nmr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="46" column="1" bodyfile="SIScalarParser.h" bodystart="46" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_s_i_scalar_parser_8h_1ab0dabaf586bf422fa83539657f06c095" prot="public" static="no">
        <type>const struct <ref refid="struct____scalar_node" kindref="compound">__scalarNode</ref> *</type>
        <definition>typedef const struct __scalarNode* ScalarNodeRef</definition>
        <argsstring></argsstring>
        <name>ScalarNodeRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="8" column="34" bodyfile="SIScalarParser.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_i_scalar_parser_8h_1aad2e24c2d75dff7811f270695cb00b07" prot="public" static="no">
        <type>const struct <ref refid="struct____scalar_value" kindref="compound">__scalarValue</ref> *</type>
        <definition>typedef const struct __scalarValue* NumberRef</definition>
        <argsstring></argsstring>
        <name>NumberRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="9" column="35" bodyfile="SIScalarParser.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_i_scalar_parser_8h_1a8ca70f25a613598adad2e9eff113a621" prot="public" static="no">
        <type>const struct <ref refid="struct____scalar_node_math_function" kindref="compound">__scalarNodeMathFunction</ref> *</type>
        <definition>typedef const struct __scalarNodeMathFunction* ScalarNodeMathFunctionRef</definition>
        <argsstring></argsstring>
        <name>ScalarNodeMathFunctionRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="10" column="46" bodyfile="SIScalarParser.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_i_scalar_parser_8h_1a6455822241e740d63e0c3854da6b3d96" prot="public" static="no">
        <type>const struct <ref refid="struct____scalar_node_constant_function" kindref="compound">__scalarNodeConstantFunction</ref> *</type>
        <definition>typedef const struct __scalarNodeConstantFunction* ScalarNodeConstantFunctionRef</definition>
        <argsstring></argsstring>
        <name>ScalarNodeConstantFunctionRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="11" column="50" bodyfile="SIScalarParser.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_i_scalar_parser_8h_1a2f7cffdbad318ea9ec253c8763993a39" prot="public" static="no">
        <type>const struct __scalarNodeSymbol *</type>
        <definition>typedef const struct __scalarNodeSymbol* ScalarNodeSymbolRef</definition>
        <argsstring></argsstring>
        <name>ScalarNodeSymbolRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="12" column="40" bodyfile="SIScalarParser.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_i_scalar_parser_8h_1a9cbf60e0a315b5537fd73fbf335dc4b2" prot="public" static="no">
        <type>const struct __scalarNodeAssignment *</type>
        <definition>typedef const struct __scalarNodeAssignment* ScalarNodeAssignmentRef</definition>
        <argsstring></argsstring>
        <name>ScalarNodeAssignmentRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="13" column="44" bodyfile="SIScalarParser.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_i_scalar_parser_8h_1ae7063844c3d36db44d825fbac44bd319" prot="public" static="no">
        <type>const struct <ref refid="struct____symbol" kindref="compound">__symbol</ref> *</type>
        <definition>typedef const struct __symbol* SymbolRef</definition>
        <argsstring></argsstring>
        <name>SymbolRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="14" column="30" bodyfile="SIScalarParser.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_i_scalar_parser_8h_1a53e735f20f6f243fc02aef98c3fdb0e4" prot="public" static="no">
        <type>enum builtInMathFunctions</type>
        <definition>typedef enum builtInMathFunctions builtInMathFunctions</definition>
        <argsstring></argsstring>
        <name>builtInMathFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="44" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_i_scalar_parser_8h_1a1d1301f6873da176a92d2a807238ae4c" prot="public" static="no">
        <type>enum builtInConstantFunctions</type>
        <definition>typedef enum builtInConstantFunctions builtInConstantFunctions</definition>
        <argsstring></argsstring>
        <name>builtInConstantFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="56" column="26"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_s_i_scalar_parser_8h_1afa4b511ec2e0365cecd78f4d6c74b72b" prot="public" static="no" extern="yes" mutable="no">
        <type>OCStringRef</type>
        <definition>OCStringRef scalarErrorString</definition>
        <argsstring></argsstring>
        <name>scalarErrorString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="58" column="20" declfile="SIScalarParser.h" declline="58" declcolumn="20"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1ac476c2f2f231b49efa28bd830ecc4148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
        <definition>ScalarNodeRef ScalarNodeCreateInnerNode</definition>
        <argsstring>(int nodeType, ScalarNodeRef left, ScalarNodeRef right)</argsstring>
        <name>ScalarNodeCreateInnerNode</name>
        <param>
          <type>int</type>
          <declname>nodeType</declname>
        </param>
        <param>
          <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="60" column="15" bodyfile="SIScalarParser.c" bodystart="180" bodyend="187" declfile="SIScalarParser.h" declline="60" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1ad0523a0940e95dd5c1ce6b91b81a826f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
        <definition>ScalarNodeRef ScalarNodeCreateNumberLeaf</definition>
        <argsstring>(SIScalarRef number)</argsstring>
        <name>ScalarNodeCreateNumberLeaf</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="61" column="15" bodyfile="SIScalarParser.c" bodystart="207" bodyend="213" declfile="SIScalarParser.h" declline="61" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1abfbc8c8e46f15cf13ba2fee9268d7caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
        <definition>ScalarNodeRef ScalarNodeCreateMathFunction</definition>
        <argsstring>(builtInMathFunctions funcType, ScalarNodeRef left)</argsstring>
        <name>ScalarNodeCreateMathFunction</name>
        <param>
          <type>builtInMathFunctions</type>
          <declname>funcType</declname>
        </param>
        <param>
          <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
          <declname>left</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="62" column="15" bodyfile="SIScalarParser.c" bodystart="189" bodyend="196" declfile="SIScalarParser.h" declline="62" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1a356a7fa484ee2e84797375e9fcd5b675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
        <definition>ScalarNodeRef ScalarNodeCreateConstantFunction</definition>
        <argsstring>(builtInConstantFunctions funcType, OCMutableStringRef string)</argsstring>
        <name>ScalarNodeCreateConstantFunction</name>
        <param>
          <type>builtInConstantFunctions</type>
          <declname>funcType</declname>
        </param>
        <param>
          <type>OCMutableStringRef</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="63" column="15" bodyfile="SIScalarParser.c" bodystart="198" bodyend="205" declfile="SIScalarParser.h" declline="63" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1a00a982a30f87aec4ada18a98f869a397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
        <definition>ScalarNodeRef NodeCreateImaginaryUnitLeaf</definition>
        <argsstring>(SIScalarRef number)</argsstring>
        <name>NodeCreateImaginaryUnitLeaf</name>
        <param>
          <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="64" column="15" declfile="SIScalarParser.h" declline="64" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1af7af61583675039ee0a63fba0fa36b66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef ScalarNodeEvaluate</definition>
        <argsstring>(ScalarNodeRef tree, OCStringRef *errorString)</argsstring>
        <name>ScalarNodeEvaluate</name>
        <param>
          <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>errorString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="65" column="13" bodyfile="SIScalarParser.c" bodystart="47" bodyend="178" declfile="SIScalarParser.h" declline="65" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1ac57259796f8f44cc406adb7b0366503a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef builtInMathFunction</definition>
        <argsstring>(ScalarNodeMathFunctionRef func, OCStringRef *errorString)</argsstring>
        <name>builtInMathFunction</name>
        <param>
          <type><ref refid="struct____scalar_node_math_function" kindref="compound">ScalarNodeMathFunctionRef</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>errorString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="66" column="13" bodyfile="SIScalarParser.c" bodystart="301" bodyend="551" declfile="SIScalarParser.h" declline="66" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1a2581f2b416f2f11f824a4b9860b355b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref></type>
        <definition>SIScalarRef builtInConstantFunction</definition>
        <argsstring>(ScalarNodeConstantFunctionRef func, OCStringRef *errorString)</argsstring>
        <name>builtInConstantFunction</name>
        <param>
          <type><ref refid="struct____scalar_node_constant_function" kindref="compound">ScalarNodeConstantFunctionRef</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>errorString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="67" column="13" bodyfile="SIScalarParser.c" bodystart="250" bodyend="299" declfile="SIScalarParser.h" declline="67" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1aee07450a462e032c5425b6718949b257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ScalarNodeisLeaf</definition>
        <argsstring>(ScalarNodeRef node)</argsstring>
        <name>ScalarNodeisLeaf</name>
        <param>
          <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="68" column="6" bodyfile="SIScalarParser.c" bodystart="220" bodyend="223" declfile="SIScalarParser.h" declline="68" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1a83665c0d3b200688c589e9252c966639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char ScalarNodeGetType</definition>
        <argsstring>(ScalarNodeRef node)</argsstring>
        <name>ScalarNodeGetType</name>
        <param>
          <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="69" column="6" bodyfile="SIScalarParser.c" bodystart="215" bodyend="218" declfile="SIScalarParser.h" declline="69" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1aaced63ed7ba5112ee77667b1d0a3c6d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ScalarNodeFree</definition>
        <argsstring>(ScalarNodeRef node)</argsstring>
        <name>ScalarNodeFree</name>
        <param>
          <type><ref refid="struct____scalar_node" kindref="compound">ScalarNodeRef</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="70" column="6" bodyfile="SIScalarParser.c" bodystart="225" bodyend="248" declfile="SIScalarParser.h" declline="70" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_i_scalar_parser_8h_1afe3434795cbf44f154191be3b17167af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref></type>
        <definition>SIUnitRef ConversionWithDefinedUnit</definition>
        <argsstring>(OCMutableStringRef mutString, double *unit_multiplier, OCStringRef *errorString)</argsstring>
        <name>ConversionWithDefinedUnit</name>
        <param>
          <type>OCMutableStringRef</type>
          <declname>mutString</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>unit_multiplier</declname>
        </param>
        <param>
          <type>OCStringRef *</type>
          <declname>errorString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SIScalarParser.h" line="72" column="11" bodyfile="SIScalarParser.c" bodystart="553" bodyend="576" declfile="SIScalarParser.h" declline="72" declcolumn="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>SIScalarParser.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>PhySy<sp/>Ltd<sp/>on<sp/>5/3/13.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2008-2014<sp/>PhySy<sp/>Ltd.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____scalar_node" kindref="compound">__scalarNode</ref><sp/>*<sp/>ScalarNodeRef;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____scalar_value" kindref="compound">__scalarValue</ref><sp/>*<sp/>NumberRef;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____scalar_node_math_function" kindref="compound">__scalarNodeMathFunction</ref><sp/>*<sp/>ScalarNodeMathFunctionRef;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____scalar_node_constant_function" kindref="compound">__scalarNodeConstantFunction</ref><sp/>*<sp/>ScalarNodeConstantFunctionRef;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__scalarNodeSymbol<sp/>*<sp/>ScalarNodeSymbolRef;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__scalarNodeAssignment<sp/>*<sp/>ScalarNodeAssignmentRef;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____symbol" kindref="compound">__symbol</ref><sp/>*<sp/>SymbolRef;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>builtInMathFunctions<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_reduce<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_sqrt,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_cbrt,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_qtrt,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_erf,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_erfc,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_exp,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_ln,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_log,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_acos,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_acosh,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_asin,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_asinh,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_atan,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_atanh,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_cos,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_cosh,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_sin,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_sinh,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_tan,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_tanh,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_conj,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_creal,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_cimag,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_carg,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>BM_cabs</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/>builtInMathFunctions;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>builtInConstantFunctions<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>BC_AW<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>BC_FW,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>BC_Isotope_Abundance,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>BC_Isotope_Spin,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>BC_Isotope_HalfLife,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>BC_Isotope_Gyromag,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>BC_Isotope_MagneticDipole,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>BC_Isotope_ElectricQuadrupole,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>BC_nmr</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/>builtInConstantFunctions;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>OCStringRef<sp/>scalarErrorString;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">ScalarNodeRef<sp/>ScalarNodeCreateInnerNode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeType,<sp/>ScalarNodeRef<sp/>left,<sp/>ScalarNodeRef<sp/>right);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">ScalarNodeRef<sp/>ScalarNodeCreateNumberLeaf(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>number);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">ScalarNodeRef<sp/>ScalarNodeCreateMathFunction(builtInMathFunctions<sp/>funcType,<sp/>ScalarNodeRef<sp/>left);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">ScalarNodeRef<sp/>ScalarNodeCreateConstantFunction(builtInConstantFunctions<sp/>funcType,<sp/>OCMutableStringRef<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">ScalarNodeRef<sp/>NodeCreateImaginaryUnitLeaf(<ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>number);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>ScalarNodeEvaluate(ScalarNodeRef<sp/>tree,<sp/>OCStringRef<sp/>*errorString);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>builtInMathFunction(ScalarNodeMathFunctionRef<sp/>func,<sp/>OCStringRef<sp/>*errorString);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="_s_i_scalar_8h_1a4221ae12f7f1db415579efd3a1c3cdda" kindref="member">SIScalarRef</ref><sp/>builtInConstantFunction(ScalarNodeConstantFunctionRef<sp/>func,<sp/>OCStringRef<sp/>*errorString);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ScalarNodeisLeaf(ScalarNodeRef<sp/>node);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ScalarNodeGetType(ScalarNodeRef<sp/>node);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScalarNodeFree(ScalarNodeRef<sp/>node);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="_s_i_unit_8h_1a1cf4e530a7af3dc4ef3c5bf3144e0652" kindref="member">SIUnitRef</ref><sp/>ConversionWithDefinedUnit(OCMutableStringRef<sp/>mutString,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*unit_multiplier,<sp/>OCStringRef<sp/>*errorString);</highlight></codeline>
    </programlisting>
    <location file="SIScalarParser.h"/>
  </compounddef>
</doxygen>
