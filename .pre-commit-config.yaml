# Pre-commit configuration for SITypes C library
# See https://pre-commit.com for more information

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: \.(md|rst)$
      - id: end-of-file-fixer
        exclude: \.(md|rst)$
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending

  # C/C++ specific tools - production ready configuration
  - repo: https://github.com/pocc/pre-commit-hooks
    rev: v1.3.5
    hooks:
      # Code formatting with clang-format (fail if not formatted)
      - id: clang-format
        args: [--style=file, --fallback-style=Google]
        files: \.(c|h)$
        exclude: ^(build/|third_party/|.*\.tab\.(c|h)|.*Scanner\.c)$

  # SITypes-specific checks
  - repo: local
    hooks:
      # Ensure code is properly formatted before commit
      - id: check-format
        name: Check code formatting
        entry: sh
        args:
          - -c
          - |
            echo "Checking code formatting compliance..."
            make format-check
        language: system
        files: \.(c|h)$
        exclude: ^(build/|third_party/|.*\.tab\.(c|h)|.*Scanner\.c)$
        pass_filenames: false

      # Build check to ensure code compiles
      - id: build-check
        name: Build verification
        entry: sh
        args:
          - -c
          - |
            echo "Verifying code builds successfully..."
            make clean >/dev/null 2>&1
            make octypes >/dev/null 2>&1
            make -j4 >/dev/null 2>&1
        language: system
        files: \.(c|h|y|l)$
        exclude: ^(build/|third_party/)$
        pass_filenames: false

      # Quick test to ensure basic functionality
      - id: quick-test
        name: Quick functionality test
        entry: sh
        args:
          - -c
          - |
            echo "Running basic functionality tests..."
            make test >/dev/null 2>&1 || (echo "❌ Tests failed - commit blocked" && exit 1)
            echo "✅ All tests pass"
        language: system
        files: \.(c|h|y|l)$
        exclude: ^(build/|third_party/)$
        pass_filenames: false

# Global settings - fail fast for efficiency
default_stages: [pre-commit]
fail_fast: true
