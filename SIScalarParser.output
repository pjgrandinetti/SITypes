Terminals which are not used

   '='


Grammar

    0 $accept: calclist $end

    1 calclist: /* empty */
    2         | calclist exp EOL

    3 exp: exp '+' exp
    4    | exp '-' exp
    5    | exp '*' exp
    6    | exp '/' exp
    7    | exp '^' exp
    8    | '|' exp '|'
    9    | '(' exp ')'
   10    | '-' exp
   11    | exp '!'
   12    | SCALAR
   13    | MATH_FUNC '(' explist ')'
   14    | CONST_FUNC CONST_STRING

   15 explist: exp
   16        | exp ',' explist


Terminals, with rules where they appear

$end (0) 0
'!' (33) 11
'(' (40) 9 13
')' (41) 9 13
'*' (42) 5
'+' (43) 3
',' (44) 16
'-' (45) 4 10
'/' (47) 6
'=' (61)
'^' (94) 7
'|' (124) 8
error (256)
SCALAR (258) 12
MATH_FUNC (259) 13
CONST_FUNC (260) 14
CONST_STRING (261) 14
EOL (262) 2
UMINUS (263)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
calclist (21)
    on left: 1 2, on right: 0 2
exp (22)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14, on right: 2 3 4 5 6 7 8
    9 10 11 15 16
explist (23)
    on left: 15 16, on right: 13 16


state 0

    0 $accept: . calclist $end

    $default  reduce using rule 1 (calclist)

    calclist  go to state 1


state 1

    0 $accept: calclist . $end
    2 calclist: calclist . exp EOL

    $end        shift, and go to state 2
    SCALAR      shift, and go to state 3
    MATH_FUNC   shift, and go to state 4
    CONST_FUNC  shift, and go to state 5
    '-'         shift, and go to state 6
    '|'         shift, and go to state 7
    '('         shift, and go to state 8

    exp  go to state 9


state 2

    0 $accept: calclist $end .

    $default  accept


state 3

   12 exp: SCALAR .

    $default  reduce using rule 12 (exp)


state 4

   13 exp: MATH_FUNC . '(' explist ')'

    '('  shift, and go to state 10


state 5

   14 exp: CONST_FUNC . CONST_STRING

    CONST_STRING  shift, and go to state 11


state 6

   10 exp: '-' . exp

    SCALAR      shift, and go to state 3
    MATH_FUNC   shift, and go to state 4
    CONST_FUNC  shift, and go to state 5
    '-'         shift, and go to state 6
    '|'         shift, and go to state 7
    '('         shift, and go to state 8

    exp  go to state 12


state 7

    8 exp: '|' . exp '|'

    SCALAR      shift, and go to state 3
    MATH_FUNC   shift, and go to state 4
    CONST_FUNC  shift, and go to state 5
    '-'         shift, and go to state 6
    '|'         shift, and go to state 7
    '('         shift, and go to state 8

    exp  go to state 13


state 8

    9 exp: '(' . exp ')'

    SCALAR      shift, and go to state 3
    MATH_FUNC   shift, and go to state 4
    CONST_FUNC  shift, and go to state 5
    '-'         shift, and go to state 6
    '|'         shift, and go to state 7
    '('         shift, and go to state 8

    exp  go to state 14


state 9

    2 calclist: calclist exp . EOL
    3 exp: exp . '+' exp
    4    | exp . '-' exp
    5    | exp . '*' exp
    6    | exp . '/' exp
    7    | exp . '^' exp
   11    | exp . '!'

    EOL  shift, and go to state 15
    '+'  shift, and go to state 16
    '-'  shift, and go to state 17
    '*'  shift, and go to state 18
    '/'  shift, and go to state 19
    '^'  shift, and go to state 20
    '!'  shift, and go to state 21


state 10

   13 exp: MATH_FUNC '(' . explist ')'

    SCALAR      shift, and go to state 3
    MATH_FUNC   shift, and go to state 4
    CONST_FUNC  shift, and go to state 5
    '-'         shift, and go to state 6
    '|'         shift, and go to state 7
    '('         shift, and go to state 8

    exp      go to state 22
    explist  go to state 23


state 11

   14 exp: CONST_FUNC CONST_STRING .

    $default  reduce using rule 14 (exp)


state 12

    3 exp: exp . '+' exp
    4    | exp . '-' exp
    5    | exp . '*' exp
    6    | exp . '/' exp
    7    | exp . '^' exp
   10    | '-' exp .
   11    | exp . '!'

    $default  reduce using rule 10 (exp)


state 13

    3 exp: exp . '+' exp
    4    | exp . '-' exp
    5    | exp . '*' exp
    6    | exp . '/' exp
    7    | exp . '^' exp
    8    | '|' exp . '|'
   11    | exp . '!'

    '+'  shift, and go to state 16
    '-'  shift, and go to state 17
    '*'  shift, and go to state 18
    '/'  shift, and go to state 19
    '^'  shift, and go to state 20
    '!'  shift, and go to state 21
    '|'  shift, and go to state 24


state 14

    3 exp: exp . '+' exp
    4    | exp . '-' exp
    5    | exp . '*' exp
    6    | exp . '/' exp
    7    | exp . '^' exp
    9    | '(' exp . ')'
   11    | exp . '!'

    '+'  shift, and go to state 16
    '-'  shift, and go to state 17
    '*'  shift, and go to state 18
    '/'  shift, and go to state 19
    '^'  shift, and go to state 20
    '!'  shift, and go to state 21
    ')'  shift, and go to state 25


state 15

    2 calclist: calclist exp EOL .

    $default  reduce using rule 2 (calclist)


state 16

    3 exp: exp '+' . exp

    SCALAR      shift, and go to state 3
    MATH_FUNC   shift, and go to state 4
    CONST_FUNC  shift, and go to state 5
    '-'         shift, and go to state 6
    '|'         shift, and go to state 7
    '('         shift, and go to state 8

    exp  go to state 26


state 17

    4 exp: exp '-' . exp

    SCALAR      shift, and go to state 3
    MATH_FUNC   shift, and go to state 4
    CONST_FUNC  shift, and go to state 5
    '-'         shift, and go to state 6
    '|'         shift, and go to state 7
    '('         shift, and go to state 8

    exp  go to state 27


state 18

    5 exp: exp '*' . exp

    SCALAR      shift, and go to state 3
    MATH_FUNC   shift, and go to state 4
    CONST_FUNC  shift, and go to state 5
    '-'         shift, and go to state 6
    '|'         shift, and go to state 7
    '('         shift, and go to state 8

    exp  go to state 28


state 19

    6 exp: exp '/' . exp

    SCALAR      shift, and go to state 3
    MATH_FUNC   shift, and go to state 4
    CONST_FUNC  shift, and go to state 5
    '-'         shift, and go to state 6
    '|'         shift, and go to state 7
    '('         shift, and go to state 8

    exp  go to state 29


state 20

    7 exp: exp '^' . exp

    SCALAR      shift, and go to state 3
    MATH_FUNC   shift, and go to state 4
    CONST_FUNC  shift, and go to state 5
    '-'         shift, and go to state 6
    '|'         shift, and go to state 7
    '('         shift, and go to state 8

    exp  go to state 30


state 21

   11 exp: exp '!' .

    $default  reduce using rule 11 (exp)


state 22

    3 exp: exp . '+' exp
    4    | exp . '-' exp
    5    | exp . '*' exp
    6    | exp . '/' exp
    7    | exp . '^' exp
   11    | exp . '!'
   15 explist: exp .
   16        | exp . ',' explist

    '+'  shift, and go to state 16
    '-'  shift, and go to state 17
    '*'  shift, and go to state 18
    '/'  shift, and go to state 19
    '^'  shift, and go to state 20
    '!'  shift, and go to state 21
    ','  shift, and go to state 31

    $default  reduce using rule 15 (explist)


state 23

   13 exp: MATH_FUNC '(' explist . ')'

    ')'  shift, and go to state 32


state 24

    8 exp: '|' exp '|' .

    $default  reduce using rule 8 (exp)


state 25

    9 exp: '(' exp ')' .

    $default  reduce using rule 9 (exp)


state 26

    3 exp: exp . '+' exp
    3    | exp '+' exp .
    4    | exp . '-' exp
    5    | exp . '*' exp
    6    | exp . '/' exp
    7    | exp . '^' exp
   11    | exp . '!'

    '*'  shift, and go to state 18
    '/'  shift, and go to state 19
    '^'  shift, and go to state 20
    '!'  shift, and go to state 21

    $default  reduce using rule 3 (exp)


state 27

    3 exp: exp . '+' exp
    4    | exp . '-' exp
    4    | exp '-' exp .
    5    | exp . '*' exp
    6    | exp . '/' exp
    7    | exp . '^' exp
   11    | exp . '!'

    '*'  shift, and go to state 18
    '/'  shift, and go to state 19
    '^'  shift, and go to state 20
    '!'  shift, and go to state 21

    $default  reduce using rule 4 (exp)


state 28

    3 exp: exp . '+' exp
    4    | exp . '-' exp
    5    | exp . '*' exp
    5    | exp '*' exp .
    6    | exp . '/' exp
    7    | exp . '^' exp
   11    | exp . '!'

    '^'  shift, and go to state 20
    '!'  shift, and go to state 21

    $default  reduce using rule 5 (exp)


state 29

    3 exp: exp . '+' exp
    4    | exp . '-' exp
    5    | exp . '*' exp
    6    | exp . '/' exp
    6    | exp '/' exp .
    7    | exp . '^' exp
   11    | exp . '!'

    '^'  shift, and go to state 20
    '!'  shift, and go to state 21

    $default  reduce using rule 6 (exp)


state 30

    3 exp: exp . '+' exp
    4    | exp . '-' exp
    5    | exp . '*' exp
    6    | exp . '/' exp
    7    | exp . '^' exp
    7    | exp '^' exp .
   11    | exp . '!'

    '^'  shift, and go to state 20
    '!'  shift, and go to state 21

    $default  reduce using rule 7 (exp)


state 31

   16 explist: exp ',' . explist

    SCALAR      shift, and go to state 3
    MATH_FUNC   shift, and go to state 4
    CONST_FUNC  shift, and go to state 5
    '-'         shift, and go to state 6
    '|'         shift, and go to state 7
    '('         shift, and go to state 8

    exp      go to state 22
    explist  go to state 33


state 32

   13 exp: MATH_FUNC '(' explist ')' .

    $default  reduce using rule 13 (exp)


state 33

   16 explist: exp ',' explist .

    $default  reduce using rule 16 (explist)
